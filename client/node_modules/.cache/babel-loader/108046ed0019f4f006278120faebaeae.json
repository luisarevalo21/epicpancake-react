{"ast":null,"code":"var _jsxFileName = \"/Users/luise.arevalo/Desktop/React/epicpancake-react/src/containers/RaidBuilder/RaidBuilder.js\";\nimport React, { Component } from \"react\";\nimport Selector from \"../../components/Selector/Selector\";\nimport Button from \"../../components/Button/Button\";\nimport \"./RaidBuilder.css\";\nimport Tabletop from \"tabletop\";\n\nclass RaidBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pokemonOptions: [],\n      gymOptions: [],\n      time: \"\",\n      selectedRaidBoss: null,\n      selectedGym: null,\n      api: \"https://docs.google.com/spreadsheets/d/1DQUjeYhEBRemcZObEKBj-QvxISX-sVUpbY8yPadg7BY/edit?usp=sharing\"\n    };\n\n    this.showInfo = (data, tabletop) => {\n      let pokemon = tabletop.sheets(\"Pokemon List\").toArray(); // console.log(\"the pokemon are \", pokemon);\n\n      let pokemonOptions = pokemon.map(element => {\n        return {\n          label: element,\n          value: element\n        };\n      });\n      let gyms = []; // this.setState({ gymOptions: data });\n\n      gyms = data.map(element => {\n        //   console.log(\"element\", element[\"N/A\"]);\n        if (element[\"N/A\"] === \"\") {\n          console.log(\"insid ethe if\");\n          return {\n            label: element[\"Blank Entry\"],\n            isDisabled: true,\n            color: \"red\" //   style: \"bold\"\n\n          };\n        }\n\n        return {\n          value: element[\"Blank Entry\"],\n          label: element[\"Blank Entry\"],\n          coordinates: element[\"N/A\"]\n        }; //   gyms.push({\n        //     value: element[\"Blank Entry\"],\n        //     label: element[\"Blank Entry\"]\n        //   });\n        //   console.log(element[\"Blank Entry\"]);\n      });\n      this.setState({\n        gymOptions: gyms,\n        pokemonOptions: pokemonOptions\n      });\n    };\n\n    this.configuringTime = currentTime => {\n      const time = currentTime.split(\":\");\n\n      if (time[0] > 12) {\n        time[0] = time[0] - 12;\n      }\n\n      console.log(time);\n      return time[0] + \":\" + time[1];\n    };\n\n    this.handleChange = (key, selectedOption) => {\n      switch (selectedOption) {\n        case \"time\":\n          this.setState({\n            [key]: selectedOption.target.value\n          });\n          break;\n\n        case \"selectedRaidBoss\":\n          this.setState({\n            [key]: selectedOption\n          });\n          break;\n\n        case \"selectedRaidBoss\":\n          this.setState;\n      } // console.log(\"inside the handle change\", selectedOption);\n      // if (key === \"time\") {\n      //   this.setState({ [key]: selectedOption.target.value });\n      // } else {\n      //   this.setState({ [key]: selectedOption });\n      // }\n\n    };\n\n    this.handleClick = () => {\n      const time = this.configuringTime(this.state.time);\n      let copyString = \"/newraid \";\n      copyString += this.state.selectedRaidBoss.value + \" at \" + this.state.selectedGym.value + \" \" + time + \" \" + this.state.selectedGym.coordiantes;\n      console.log(copyString);\n    };\n  }\n\n  componentDidMount() {\n    Tabletop.init({\n      key: \"https://docs.google.com/spreadsheets/d/1DQUjeYhEBRemcZObEKBj-QvxISX-sVUpbY8yPadg7BY/edit?usp=sharing\",\n      callback: this.showInfo,\n      simpleSheet: true\n    });\n  }\n\n  render() {\n    // console.log(\"this.state.gymoptions\", this.state.gymOptions);\n    // const options = [\n    //   { optgroup: \"Things\", value: \"thing1\", label: \"Thing 1\" },\n    //   { optgroup: \"Things\", value: \"thing2\", label: \"Thing 2\" },\n    //   { optgroup: \"Things\", value: \"thing3\", label: \"Thing 3\" },\n    //   { optgroup: \"Stuffs\", value: \"stuff1\", label: \"Stuff 1\" },\n    //   { optgroup: \"Piles\", value: \"pile1\", label: \"Pile 1\" },\n    //   { value: \"pile1\", label: \"Pile 1\" }\n    // ];\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Selector, {\n      label: \"Raid Boss\",\n      changed: val => this.handleChange(\"selectedRaidBoss\", val),\n      value: this.state.selectedRaidBoss,\n      options: this.state.pokemonOptions,\n      type: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Selector, {\n      label: \"Gym\",\n      changed: val => this.handleChange(\"selectedGym\", val),\n      value: this.state.selectedGym,\n      options: this.state.gymOptions,\n      type: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(Selector, {\n      label: \"Start Time\",\n      changed: val => this.handleChange(\"time\", val),\n      value: this.state.time //   options={options}\n      ,\n      type: \"time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), \"*/}\", React.createElement(Button, {\n      clicked: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default RaidBuilder;","map":{"version":3,"sources":["/Users/luise.arevalo/Desktop/React/epicpancake-react/src/containers/RaidBuilder/RaidBuilder.js"],"names":["React","Component","Selector","Button","Tabletop","RaidBuilder","state","pokemonOptions","gymOptions","time","selectedRaidBoss","selectedGym","api","showInfo","data","tabletop","pokemon","sheets","toArray","map","element","label","value","gyms","console","log","isDisabled","color","coordinates","setState","configuringTime","currentTime","split","handleChange","key","selectedOption","target","handleClick","copyString","coordiantes","componentDidMount","init","callback","simpleSheet","render","val"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Selector from \"../../components/Selector/Selector\";\nimport Button from \"../../components/Button/Button\";\nimport \"./RaidBuilder.css\";\nimport Tabletop from \"tabletop\";\n\nclass RaidBuilder extends Component {\n  state = {\n    pokemonOptions: [],\n    gymOptions: [],\n    time: \"\",\n    selectedRaidBoss: null,\n    selectedGym: null,\n    api:\n      \"https://docs.google.com/spreadsheets/d/1DQUjeYhEBRemcZObEKBj-QvxISX-sVUpbY8yPadg7BY/edit?usp=sharing\"\n  };\n\n  componentDidMount() {\n    Tabletop.init({\n      key:\n        \"https://docs.google.com/spreadsheets/d/1DQUjeYhEBRemcZObEKBj-QvxISX-sVUpbY8yPadg7BY/edit?usp=sharing\",\n      callback: this.showInfo,\n      simpleSheet: true\n    });\n  }\n  showInfo = (data, tabletop) => {\n    let pokemon = tabletop.sheets(\"Pokemon List\").toArray();\n    // console.log(\"the pokemon are \", pokemon);\n    let pokemonOptions = pokemon.map(element => {\n      return { label: element, value: element };\n    });\n    let gyms = [];\n    // this.setState({ gymOptions: data });\n    gyms = data.map(element => {\n      //   console.log(\"element\", element[\"N/A\"]);\n      if (element[\"N/A\"] === \"\") {\n        console.log(\"insid ethe if\");\n\n        return {\n          label: element[\"Blank Entry\"],\n          isDisabled: true,\n          color: \"red\"\n          //   style: \"bold\"\n        };\n      }\n      return {\n        value: element[\"Blank Entry\"],\n        label: element[\"Blank Entry\"],\n        coordinates: element[\"N/A\"]\n      };\n      //   gyms.push({\n      //     value: element[\"Blank Entry\"],\n      //     label: element[\"Blank Entry\"]\n      //   });\n      //   console.log(element[\"Blank Entry\"]);\n    });\n    this.setState({ gymOptions: gyms, pokemonOptions: pokemonOptions });\n  };\n\n  configuringTime = currentTime => {\n    const time = currentTime.split(\":\");\n    if (time[0] > 12) {\n      time[0] = time[0] - 12;\n    }\n    console.log(time);\n    return time[0] + \":\" + time[1];\n  };\n  handleChange = (key, selectedOption) => {\n    switch (selectedOption) {\n      case \"time\":\n        this.setState({ [key]: selectedOption.target.value });\n        break;\n      case \"selectedRaidBoss\":\n        this.setState({ [key]: selectedOption });\n        break;\n        case \"selectedRaidBoss\":\n            this.setState\n    }\n    // console.log(\"inside the handle change\", selectedOption);\n    // if (key === \"time\") {\n    //   this.setState({ [key]: selectedOption.target.value });\n    // } else {\n    //   this.setState({ [key]: selectedOption });\n    // }\n  };\n\n  handleClick = () => {\n    const time = this.configuringTime(this.state.time);\n    let copyString = \"/newraid \";\n    copyString +=\n      this.state.selectedRaidBoss.value +\n      \" at \" +\n      this.state.selectedGym.value +\n      \" \" +\n      time +\n      \" \" +\n      this.state.selectedGym.coordiantes;\n    console.log(copyString);\n  };\n  render() {\n    // console.log(\"this.state.gymoptions\", this.state.gymOptions);\n    // const options = [\n    //   { optgroup: \"Things\", value: \"thing1\", label: \"Thing 1\" },\n    //   { optgroup: \"Things\", value: \"thing2\", label: \"Thing 2\" },\n    //   { optgroup: \"Things\", value: \"thing3\", label: \"Thing 3\" },\n    //   { optgroup: \"Stuffs\", value: \"stuff1\", label: \"Stuff 1\" },\n    //   { optgroup: \"Piles\", value: \"pile1\", label: \"Pile 1\" },\n    //   { value: \"pile1\", label: \"Pile 1\" }\n    // ];\n    return (\n      <div className=\"container\">\n        <Selector\n          label=\"Raid Boss\"\n          changed={val => this.handleChange(\"selectedRaidBoss\", val)}\n          value={this.state.selectedRaidBoss}\n          options={this.state.pokemonOptions}\n          type=\"input\"\n        />\n        <Selector\n          label=\"Gym\"\n          changed={val => this.handleChange(\"selectedGym\", val)}\n          value={this.state.selectedGym}\n          options={this.state.gymOptions}\n          type=\"input\"\n        />\n        <Selector\n          label=\"Start Time\"\n          changed={val => this.handleChange(\"time\", val)}\n          value={this.state.time}\n          //   options={options}\n          type=\"time\"\n        />\n        {/* <label style={{ color: \"#6c7d8e\" }}>Start Time</label>\n        {/* <div className=\"form-group\"> */}\n        {/* <input\n          type=\"time\"\n          className=\"form-control\"\n          placeholder=\"Time\"\n          required=\"\"\n          data-fillr-id=\"1465670472\"\n          data-fillr=\"bound\"\n          autoComplete=\"off\"\n          onChange={val => this.handleChange(\"time\", val)}\n        />{\" \"} */}\n        */}\n        {/* </div> */}\n        {/* <Selector\n          label=\"Start Time\"\n          changed={this.handleChanged}\n          selected={this.state.selectedOption}\n          type=\"time\"\n        /> */}\n        <Button clicked={this.handleClick} />\n      </div>\n    );\n  }\n}\n\nexport default RaidBuilder;\n"]},"metadata":{},"sourceType":"module"}