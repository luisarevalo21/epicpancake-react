{"ast":null,"code":"var _jsxFileName = \"/Users/luise.arevalo/Desktop/React/epicpancake-react/client/src/containers/Gym/Gym.js\";\nimport React, { Component } from \"react\";\nimport Tabletop from \"tabletop\";\nimport classes from \"./Gym.module.css\";\n\nclass Gym extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // id: this.props.match.params.gymId,\n      data: [],\n      date: \"\",\n      time: \"\",\n      ins\n    };\n\n    this.showInfo = (data, tabletop) => {\n      console.log(\"the id is\", this.props.match.params.gymId);\n      const array = tabletop.sheets(this.props.match.params.gymId).toArray();\n      this.setState({\n        data: array\n      });\n    };\n\n    this.makeList = data => {\n      console.log(\"the datae is \", data);\n      let date = \"\";\n      let time = \"\";\n      let list = \"\";\n      let instinctList = \"\";\n      let valorList = \"\";\n      let mysticList = \"\";\n\n      if (data && data[0]) {\n        date = data[0][4];\n        time = data[0][5];\n        console.log(\"inside the if\");\n        console.log(data[0][4]);\n        instinctList = data.filter(element => element[2] === \"Instinct\");\n        valorList = data.filter(element => element[2] === \"Valor\");\n        mysticList = data.filter(element => element[2] === \"Mystic\");\n        console.log(\"the mystic list is \", mysticList);\n        return React.createElement(\"div\", {\n          className: classes.Gym,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: classes.Gym_date_time,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, date), React.createElement(\"span\", {\n          className: classes.Gym_date_time,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, time), React.createElement(\"div\", {\n          className: classes.Gym_Container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          className: classes.InstinctList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, this.generateList(instinctList))), React.createElement(\"div\", {\n          className: classes.Gym_Container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          className: classes.MysticList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, this.generateList(mysticList))), React.createElement(\"div\", {\n          className: classes.Gym_Container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          className: classes.ValorList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, this.generateList(valorList))));\n      }\n    };\n\n    this.generateList = list => {\n      console.log(\"the list is\", list);\n      let finishedList = \"\";\n      finishedList = list.map(element => {\n        if (element[6].trim() === \"My friend will play for me (enter their name in the comment)\") {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, element[0].trim() + \", \" + element[1].trim() + \", \" + element[3].trim() + \", \" + \"via proxy\");\n        } else if (element[6].trim() === \"I need someone to play for me (add your telegram name in the comments so an admin can contact you)\") {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, element[0].trim() + \", \" + element[1].trim() + \", \" + element[3].trim() + \", \" + \"needs proxy\");\n        } else {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, element[0].trim() + \", \" + element[1].trim() + \", \" + element[3].trim());\n        }\n      });\n      return finishedList;\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"the id is\", this.props.match.params.gymId);\n    Tabletop.init({\n      key: \"https://docs.google.com/spreadsheets/d/15mSqg-uGZTmQBEu_hqvNzaCiSPGi8JapuV46WmsDRvM/edit?usp=sharing\",\n      callback: this.showInfo,\n      simpleSheet: true\n    });\n  }\n\n  render() {\n    // console.log(\"the id is\", this.state.data[0]);\n    // let date = this.state.data[0];\n    let time = \"\"; // this.state.data.map(element => {\n    //   date = element[4];\n    //   time = element[5];\n    // });\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.Gym,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.props.match.params.gymId), React.createElement(\"div\", {\n      className: classes.List,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.makeList(this.state.data)));\n  }\n\n}\n\nexport default Gym;","map":{"version":3,"sources":["/Users/luise.arevalo/Desktop/React/epicpancake-react/client/src/containers/Gym/Gym.js"],"names":["React","Component","Tabletop","classes","Gym","state","data","date","time","ins","showInfo","tabletop","console","log","props","match","params","gymId","array","sheets","toArray","setState","makeList","list","instinctList","valorList","mysticList","filter","element","Gym_date_time","Gym_Container","InstinctList","generateList","MysticList","ValorList","finishedList","map","trim","componentDidMount","init","key","callback","simpleSheet","render","List"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Tabletop from \"tabletop\";\nimport classes from \"./Gym.module.css\";\n\nclass Gym extends Component {\n  state = {\n    // id: this.props.match.params.gymId,\n    data: [],\n    date: \"\",\n    time: \"\",\n    ins\n  };\n\n  componentDidMount() {\n    console.log(\"the id is\", this.props.match.params.gymId);\n\n    Tabletop.init({\n      key:\n        \"https://docs.google.com/spreadsheets/d/15mSqg-uGZTmQBEu_hqvNzaCiSPGi8JapuV46WmsDRvM/edit?usp=sharing\",\n      callback: this.showInfo,\n      simpleSheet: true\n    });\n  }\n  showInfo = (data, tabletop) => {\n    console.log(\"the id is\", this.props.match.params.gymId);\n    const array = tabletop.sheets(this.props.match.params.gymId).toArray();\n\n\n\n\n\n\n    this.setState({ data: array });\n  };\n  makeList = data => {\n    console.log(\"the datae is \", data);\n    let date = \"\";\n    let time = \"\";\n    let list = \"\";\n    let instinctList = \"\";\n    let valorList = \"\";\n    let mysticList = \"\";\n    if (data && data[0]) {\n      date = data[0][4];\n      time = data[0][5];\n      console.log(\"inside the if\");\n      console.log(data[0][4]);\n\n      instinctList = data.filter(element => element[2] === \"Instinct\");\n\n      valorList = data.filter(element => element[2] === \"Valor\");\n\n      mysticList = data.filter(element => element[2] === \"Mystic\");\n\n      console.log(\"the mystic list is \", mysticList);\n\n      return (\n        <div className={classes.Gym}>\n          <span className={classes.Gym_date_time}>{date}</span>\n          <span className={classes.Gym_date_time}>{time}</span>\n          <div className={classes.Gym_Container}>\n            <ul className={classes.InstinctList}>\n              {this.generateList(instinctList)}\n            </ul>\n          </div>\n          <div className={classes.Gym_Container}>\n            <ul className={classes.MysticList}>\n              {this.generateList(mysticList)}\n            </ul>\n          </div>\n          <div className={classes.Gym_Container}>\n            <ul className={classes.ValorList}>\n              {this.generateList(valorList)}\n            </ul>\n          </div>\n        </div>\n      );\n    }\n  };\n  generateList = list => {\n    console.log(\"the list is\", list);\n    let finishedList = \"\";\n    finishedList = list.map(element => {\n      if (\n        element[6].trim() ===\n        \"My friend will play for me (enter their name in the comment)\"\n      ) {\n        return (\n          <li>\n            {element[0].trim() +\n              \", \" +\n              element[1].trim() +\n              \", \" +\n              element[3].trim() +\n              \", \" +\n              \"via proxy\"}\n          </li>\n        );\n      } else if (\n        element[6].trim() ===\n        \"I need someone to play for me (add your telegram name in the comments so an admin can contact you)\"\n      ) {\n        return (\n          <li>\n            {element[0].trim() +\n              \", \" +\n              element[1].trim() +\n              \", \" +\n              element[3].trim() +\n              \", \" +\n              \"needs proxy\"}\n          </li>\n        );\n      } else {\n        return (\n          <li>\n            {element[0].trim() +\n              \", \" +\n              element[1].trim() +\n              \", \" +\n              element[3].trim()}\n          </li>\n        );\n      }\n    });\n    return finishedList;\n  };\n  render() {\n    // console.log(\"the id is\", this.state.data[0]);\n    // let date = this.state.data[0];\n    let time = \"\";\n    // this.state.data.map(element => {\n    //   date = element[4];\n    //   time = element[5];\n    // });\n    return (\n      <div>\n        <h1 className={classes.Gym}>{this.props.match.params.gymId}</h1>\n        <div className={classes.List}>{this.makeList(this.state.data)}</div>\n      </div>\n    );\n  }\n}\n\nexport default Gym;\n"]},"metadata":{},"sourceType":"module"}