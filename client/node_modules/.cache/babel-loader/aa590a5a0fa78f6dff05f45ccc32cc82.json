{"ast":null,"code":"var _jsxFileName = \"/Users/luise.arevalo/Desktop/React/epicpancake-react/client/src/containers/Gym/Gym.js\";\nimport React, { Component } from \"react\";\nimport Tabletop from \"tabletop\";\nimport classes from \"./Gym.module.css\";\nimport ListBuilder from \"../../components/ListBuilder/ListBuilder\";\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport Modal from \"../Modal/Modal\";\nimport ValorLogo from \"../../assets/images/ValorLogo.png\";\nimport Logo from \"../../components/Logo/Logo\";\nimport MysticLogo from \"../../assets/images/MysticLogo.png\";\n\nclass Gym extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // id: this.props.match.params.gymId,\n      data: [],\n      date: \"\",\n      time: \"\",\n      instinctList: [],\n      valorList: [],\n      mysticList: [],\n      loading: true\n    };\n\n    this.showInfo = (data, tabletop) => {\n      const array = tabletop.sheets(this.props.match.params.gymId).toArray();\n      console.log(\"the array is\", array);\n\n      if (array.length !== 0) {\n        console.log(\"the id is\", this.props.match.params.gymId); // const array = tabletop.sheets(this.props.match.params.gymId).toArray();\n\n        const date = array[0][4];\n        const time = array[0][5];\n        const instinctList = array.filter(element => element[2] === \"Instinct\");\n        const valorList = array.filter(element => element[2] === \"Valor\");\n        const mysticList = array.filter(element => element[2] === \"Mystic\");\n        console.log(array[0][0]);\n        this.setState({\n          data: array,\n          date,\n          time,\n          instinctList,\n          valorList,\n          mysticList,\n          loading: false\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"the id is\", this.props.match.params.gymId);\n    Tabletop.init({\n      key: \"https://docs.google.com/spreadsheets/d/15mSqg-uGZTmQBEu_hqvNzaCiSPGi8JapuV46WmsDRvM/edit?usp=sharing\",\n      callback: this.showInfo,\n      simpleSheet: true\n    });\n  }\n\n  render() {\n    let gyms = React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: classes.List,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: classes.Gym_date_time,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.date), React.createElement(\"span\", {\n      className: classes.Gym_date_time,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.time), React.createElement(\"div\", {\n      className: [classes.List, classes.InstinctList].join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(ListBuilder, {\n      list: this.state.instinctList,\n      team: \"Instinct\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: [classes.List, classes.MysticList].join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      src: ValorLogo,\n      type: \"team\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(ListBuilder, {\n      list: this.state.mysticList,\n      team: \"Mystic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: [classes.List, classes.ValorList].join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      src: ValorLogo,\n      type: \"team\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(ListBuilder, {\n      list: this.state.valorList,\n      team: \"Valor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))));\n\n    if (this.state.loading) {\n      //change to just a spinner if need be\n      gyms = React.createElement(Modal, {\n        show: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      });\n    } // console.log(\"the id is\", this.state.data[0]);\n    // let date = this.state.data[0];\n    // this.state.data.map(element => {\n    //   date = element[4];\n    //   time = element[5];\n    // });\n\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.Gym,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.props.match.params.gymId), gyms);\n  }\n\n}\n\nexport default Gym;","map":{"version":3,"sources":["/Users/luise.arevalo/Desktop/React/epicpancake-react/client/src/containers/Gym/Gym.js"],"names":["React","Component","Tabletop","classes","ListBuilder","Spinner","Modal","ValorLogo","Logo","MysticLogo","Gym","state","data","date","time","instinctList","valorList","mysticList","loading","showInfo","tabletop","array","sheets","props","match","params","gymId","toArray","console","log","length","filter","element","setState","componentDidMount","init","key","callback","simpleSheet","render","gyms","List","Gym_date_time","InstinctList","join","MysticList","ValorList"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Tabletop from \"tabletop\";\nimport classes from \"./Gym.module.css\";\nimport ListBuilder from \"../../components/ListBuilder/ListBuilder\";\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport Modal from \"../Modal/Modal\";\nimport ValorLogo from \"../../assets/images/ValorLogo.png\";\nimport Logo from \"../../components/Logo/Logo\";\nimport MysticLogo from \"../../assets/images/MysticLogo.png\";\nclass Gym extends Component {\n  state = {\n    // id: this.props.match.params.gymId,\n    data: [],\n    date: \"\",\n    time: \"\",\n    instinctList: [],\n    valorList: [],\n    mysticList: [],\n    loading: true\n  };\n\n  componentDidMount() {\n    console.log(\"the id is\", this.props.match.params.gymId);\n\n    Tabletop.init({\n      key:\n        \"https://docs.google.com/spreadsheets/d/15mSqg-uGZTmQBEu_hqvNzaCiSPGi8JapuV46WmsDRvM/edit?usp=sharing\",\n      callback: this.showInfo,\n      simpleSheet: true\n    });\n  }\n  showInfo = (data, tabletop) => {\n    const array = tabletop.sheets(this.props.match.params.gymId).toArray();\n    console.log(\"the array is\", array);\n    if (array.length !== 0) {\n      console.log(\"the id is\", this.props.match.params.gymId);\n      // const array = tabletop.sheets(this.props.match.params.gymId).toArray();\n      const date = array[0][4];\n      const time = array[0][5];\n      const instinctList = array.filter(element => element[2] === \"Instinct\");\n      const valorList = array.filter(element => element[2] === \"Valor\");\n      const mysticList = array.filter(element => element[2] === \"Mystic\");\n\n      console.log(array[0][0]);\n      this.setState({\n        data: array,\n        date,\n        time,\n        instinctList,\n        valorList,\n        mysticList,\n        loading: false\n      });\n    }\n  };\n\n  render() {\n    let gyms = (\n      <>\n        {/* <h1 className={classes.Gym}>{this.props.match.params.gymId}</h1> */}\n        <div className={classes.List}>\n          <span className={classes.Gym_date_time}>{this.state.date}</span>\n          <span className={classes.Gym_date_time}>{this.state.time}</span>\n          <div className={[classes.List, classes.InstinctList].join(\" \")}>\n            <ListBuilder list={this.state.instinctList} team=\"Instinct\" />\n          </div>\n          <div className={[classes.List, classes.MysticList].join(\" \")}>\n            <Logo src={ValorLogo} type=\"team\" />\n\n            <ListBuilder list={this.state.mysticList} team=\"Mystic\" />\n          </div>\n          <div className={[classes.List, classes.ValorList].join(\" \")}>\n            <Logo src={ValorLogo} type=\"team\" />\n            <ListBuilder list={this.state.valorList} team=\"Valor\" />\n          </div>\n        </div>\n      </>\n    );\n    if (this.state.loading) {\n      //change to just a spinner if need be\n      gyms = <Modal show={this.state.loading} />;\n    }\n    // console.log(\"the id is\", this.state.data[0]);\n    // let date = this.state.data[0];\n    // this.state.data.map(element => {\n    //   date = element[4];\n    //   time = element[5];\n    // });\n    return (\n      <div>\n        <h1 className={classes.Gym}>{this.props.match.params.gymId}</h1>\n        {gyms}\n      </div>\n    );\n  }\n}\n\nexport default Gym;\n"]},"metadata":{},"sourceType":"module"}