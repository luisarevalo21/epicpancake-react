{"ast":null,"code":"var _jsxFileName = \"/Users/luise.arevalo/Desktop/React/epicpancake-react/src/App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport RaidBuilder from \"./containers/RaidBuilder/RaidBuilder\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pokemonOptions: [],\n      gymOptions: [],\n      time: \"\",\n      selectedRaidBoss: null,\n      selectedGym: null,\n      copyValue: []\n    };\n\n    this.handleChange = (key, selectedOption) => {\n      console.log(\"inside the handle change\", selectedOption);\n\n      if (key === \"time\") {\n        this.setState({\n          [key]: selectedOption.target.value\n        });\n      } else {\n        this.setState({\n          [key]: selectedOption.value\n        });\n      }\n    };\n  }\n\n  // handleRaidBossChange = selectedRaidBoss => {\n  //   // console.log(\"the event is \", event.value);\n  //   this.setState({\n  //     selectedRaidBoss: selectedRaidBoss.value,\n  //     copyValue: selectedRaidBoss\n  //   });\n  // };\n  // handleGymChange = selectedGym => {\n  //   // console.log(\"the event is \", event.value);\n  //   this.setState({\n  //     selectedGym: selectedGym,\n  //     copyValue: selectedGym\n  //   });\n  // };\n  // {/* //toolbar\n  // //search bar\n  // //search bar\n  // // <Selector />\n  // //search bar */}\n  render() {\n    const options = [{\n      value: \"-\",\n      label: \"-\"\n    }, {\n      value: \"chocolate\",\n      label: \"Chocolate\"\n    }, {\n      value: \"strawberry\",\n      label: \"Strawberry\"\n    }, {\n      value: \"vanilla\",\n      label: \"Vanilla\"\n    }];\n    console.log(\"this.state.selected\", this.state);\n    return (//either keep the container or use media queries to reduce the size depended on screensize\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(RaidBuilder, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/luise.arevalo/Desktop/React/epicpancake-react/src/App.js"],"names":["React","Component","RaidBuilder","App","state","pokemonOptions","gymOptions","time","selectedRaidBoss","selectedGym","copyValue","handleChange","key","selectedOption","console","log","setState","target","value","render","options","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BG,KAD0B,GAClB;AACNC,MAAAA,cAAc,EAAE,EADV;AAENC,MAAAA,UAAU,EAAE,EAFN;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,gBAAgB,EAAE,IAJZ;AAKNC,MAAAA,WAAW,EAAE,IALP;AAONC,MAAAA,SAAS,EAAE;AAPL,KADkB;;AAAA,SAW1BC,YAX0B,GAWX,CAACC,GAAD,EAAMC,cAAN,KAAyB;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,cAAxC;;AACA,UAAID,GAAG,KAAK,MAAZ,EAAoB;AAClB,aAAKI,QAAL,CAAc;AAAE,WAACJ,GAAD,GAAOC,cAAc,CAACI,MAAf,CAAsBC;AAA/B,SAAd;AACD,OAFD,MAEO;AACL,aAAKF,QAAL,CAAc;AAAE,WAACJ,GAAD,GAAOC,cAAc,CAACK;AAAxB,SAAd;AACD;AACF,KAlByB;AAAA;;AAoB1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG,CACd;AAAEF,MAAAA,KAAK,EAAE,GAAT;AAAcG,MAAAA,KAAK,EAAE;AAArB,KADc,EAEd;AAAEH,MAAAA,KAAK,EAAE,WAAT;AAAsBG,MAAAA,KAAK,EAAE;AAA7B,KAFc,EAGd;AAAEH,MAAAA,KAAK,EAAE,YAAT;AAAuBG,MAAAA,KAAK,EAAE;AAA9B,KAHc,EAId;AAAEH,MAAAA,KAAK,EAAE,SAAT;AAAoBG,MAAAA,KAAK,EAAE;AAA3B,KAJc,CAAhB;AAMAP,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,KAAKX,KAAxC;AACA,WACE;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAFF;AAMD;;AArDyB;;AAwD5B,eAAeD,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport RaidBuilder from \"./containers/RaidBuilder/RaidBuilder\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    pokemonOptions: [],\n    gymOptions: [],\n    time: \"\",\n    selectedRaidBoss: null,\n    selectedGym: null,\n\n    copyValue: []\n  };\n\n  handleChange = (key, selectedOption) => {\n    console.log(\"inside the handle change\", selectedOption);\n    if (key === \"time\") {\n      this.setState({ [key]: selectedOption.target.value });\n    } else {\n      this.setState({ [key]: selectedOption.value });\n    }\n  };\n\n  // handleRaidBossChange = selectedRaidBoss => {\n  //   // console.log(\"the event is \", event.value);\n  //   this.setState({\n  //     selectedRaidBoss: selectedRaidBoss.value,\n  //     copyValue: selectedRaidBoss\n  //   });\n  // };\n  // handleGymChange = selectedGym => {\n  //   // console.log(\"the event is \", event.value);\n  //   this.setState({\n  //     selectedGym: selectedGym,\n  //     copyValue: selectedGym\n  //   });\n  // };\n  // {/* //toolbar\n  // //search bar\n  // //search bar\n  // // <Selector />\n  // //search bar */}\n  render() {\n    const options = [\n      { value: \"-\", label: \"-\" },\n      { value: \"chocolate\", label: \"Chocolate\" },\n      { value: \"strawberry\", label: \"Strawberry\" },\n      { value: \"vanilla\", label: \"Vanilla\" }\n    ];\n    console.log(\"this.state.selected\", this.state);\n    return (\n      //either keep the container or use media queries to reduce the size depended on screensize\n      <div>\n        <RaidBuilder />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}