{"ast":null,"code":"var _jsxFileName = \"/Users/luise.arevalo/Desktop/React/epicpancake-react/client/src/containers/Gym/Gym.js\";\nimport React, { Component } from \"react\";\nimport Tabletop from \"tabletop\";\nimport classes from \"./Gym.module.css\";\nimport ListBuilder from \"../../components/ListBuilder/ListBuilder\";\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport Modal from \"../Modal/Modal\";\nimport ValorLogo from \"../../assets/images/Team_Valor.png\";\nimport Logo from \"../../components/Logo/Logo\";\nimport MysticLogo from \"../../assets/images/Team_Mystic.png\";\nimport InstinctLogo from \"../../assets/images/Team_Instinct.png\";\nimport Button from \"../../components/Button/Button\";\nlet copyString = \"\";\n\nclass Gym extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // id: this.props.match.params.gymId,\n      data: [],\n      date: \"\",\n      time: \"\",\n      instinctList: [],\n      valorList: [],\n      mysticList: [],\n      loading: true,\n      copyString: \"\"\n    };\n\n    this.handleClick = () => {\n      const copy = this.copyString();\n      console.log(\"copy from handle click is\", copy);\n      console.log(\"button was clicked\", copy);\n    };\n\n    this.copyString = dataFromChild => {\n      console.log(\"the data from child is\", dataFromChild);\n\n      if (dataFromChild) {\n        // console.log(\"the data from the child is\", dataFromChild);\n        let copy = this.state.copyString;\n        copy += dataFromChild;\n        console.log(\"the final copy is\", copy);\n        this.setState({\n          copyString: copy\n        });\n      } // console.log(\"the data from the child is\", copy);\n      // return copy;\n      // this.setState({ copyString: copy });\n      //setstate afterwards\n\n    };\n\n    this.showInfo = (data, tabletop) => {\n      const array = tabletop.sheets(this.props.match.params.gymId).toArray();\n      console.log(\"the array is\", array);\n      let copyString = \"\";\n\n      if (array.length !== 0) {\n        copyString += this.props.match.params.gymId + \"\\n\";\n        console.log(\"the id is\", this.props.match.params.gymId); // const array = tabletop.sheets(this.props.match.params.gymId).toArray();\n\n        const date = array[0][4];\n        copyString += date + \"\\n\";\n        const time = array[0][5];\n        copyString += time + \"\\n\";\n        console.log(\"the copy string is\", copyString);\n        const instinctList = array.filter(element => element[2] === \"Instinct\");\n        const valorList = array.filter(element => element[2] === \"Valor\");\n        const mysticList = array.filter(element => element[2] === \"Mystic\");\n        console.log(\"the valor list is\", valorList); // console.log(array[0][0]);\n\n        this.setState({\n          data: array,\n          date,\n          time,\n          instinctList,\n          valorList,\n          mysticList,\n          loading: false,\n          copyString: copyString\n        });\n      } else {\n        this.setState({\n          loading: false,\n          copyString: copyString\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"the id is\", this.props.match.params.gymId);\n    Tabletop.init({\n      key: \"https://docs.google.com/spreadsheets/d/15mSqg-uGZTmQBEu_hqvNzaCiSPGi8JapuV46WmsDRvM/edit?usp=sharing\",\n      callback: this.showInfo,\n      simpleSheet: true\n    });\n  }\n\n  componentDidUpdate() {\n    console.log(\"triggering a reender\");\n  }\n\n  render() {\n    console.log(\"the copystring is \", this.state.copyString); // this.copyString();\n\n    let gyms = React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: classes.List,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: classes.Gym_date_time,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.date), React.createElement(\"span\", {\n      className: classes.Gym_date_time,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.time), React.createElement(\"div\", {\n      className: [classes.List, classes.InstinctList].join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      src: InstinctLogo,\n      type: \"team\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(ListBuilder, {\n      list: this.state.instinctList,\n      team: \"Instinct\",\n      text: this.state.copyString,\n      test: this.copyString,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: [classes.List, classes.MysticList].join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      src: MysticLogo,\n      type: \"team\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(ListBuilder, {\n      list: this.state.mysticList,\n      team: \"Mystic\",\n      text: this.state.copyString,\n      test: this.copyString(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: [classes.List, classes.ValorList].join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      src: ValorLogo,\n      type: \"team\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(ListBuilder, {\n      list: this.state.valorList,\n      team: \"Valor\",\n      text: this.state.copyString,\n      test: this.copyString,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))));\n\n    if (this.state.loading) {\n      //change to just a spinner if need be\n      gyms = React.createElement(Modal, {\n        show: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      });\n    } // console.log(\"the id is\", this.state.data[0]);\n    // let date = this.state.data[0];\n    // this.state.data.map(element => {\n    //   date = element[4];\n    //   time = element[5];\n    // });\n\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.Gym,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, this.props.match.params.gymId), gyms, React.createElement(Button, {\n      clicked: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Copy\"));\n  }\n\n}\n\nexport default Gym;","map":{"version":3,"sources":["/Users/luise.arevalo/Desktop/React/epicpancake-react/client/src/containers/Gym/Gym.js"],"names":["React","Component","Tabletop","classes","ListBuilder","Spinner","Modal","ValorLogo","Logo","MysticLogo","InstinctLogo","Button","copyString","Gym","state","data","date","time","instinctList","valorList","mysticList","loading","handleClick","copy","console","log","dataFromChild","setState","showInfo","tabletop","array","sheets","props","match","params","gymId","toArray","length","filter","element","componentDidMount","init","key","callback","simpleSheet","componentDidUpdate","render","gyms","List","Gym_date_time","InstinctList","join","MysticList","ValorList"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Tabletop from \"tabletop\";\nimport classes from \"./Gym.module.css\";\nimport ListBuilder from \"../../components/ListBuilder/ListBuilder\";\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport Modal from \"../Modal/Modal\";\nimport ValorLogo from \"../../assets/images/Team_Valor.png\";\nimport Logo from \"../../components/Logo/Logo\";\nimport MysticLogo from \"../../assets/images/Team_Mystic.png\";\nimport InstinctLogo from \"../../assets/images/Team_Instinct.png\";\nimport Button from \"../../components/Button/Button\";\nlet copyString = \"\";\n\nclass Gym extends Component {\n  state = {\n    // id: this.props.match.params.gymId,\n    data: [],\n    date: \"\",\n    time: \"\",\n    instinctList: [],\n    valorList: [],\n    mysticList: [],\n    loading: true,\n    copyString: \"\"\n  };\n\n  componentDidMount() {\n    console.log(\"the id is\", this.props.match.params.gymId);\n\n    Tabletop.init({\n      key:\n        \"https://docs.google.com/spreadsheets/d/15mSqg-uGZTmQBEu_hqvNzaCiSPGi8JapuV46WmsDRvM/edit?usp=sharing\",\n      callback: this.showInfo,\n      simpleSheet: true\n    });\n  }\n  componentDidUpdate() {\n    console.log(\"triggering a reender\");\n  }\n  handleClick = () => {\n    const copy = this.copyString();\n\n    console.log(\"copy from handle click is\", copy);\n    console.log(\"button was clicked\", copy);\n  };\n  copyString = dataFromChild => {\n    console.log(\"the data from child is\", dataFromChild);\n    if (dataFromChild) {\n      // console.log(\"the data from the child is\", dataFromChild);\n      let copy = this.state.copyString;\n\n      copy += dataFromChild;\n      console.log(\"the final copy is\", copy);\n      this.setState({ copyString: copy });\n    }\n    // console.log(\"the data from the child is\", copy);\n    // return copy;\n    // this.setState({ copyString: copy });\n\n    //setstate afterwards\n  };\n  showInfo = (data, tabletop) => {\n    const array = tabletop.sheets(this.props.match.params.gymId).toArray();\n    console.log(\"the array is\", array);\n    let copyString = \"\";\n    if (array.length !== 0) {\n      copyString += this.props.match.params.gymId + \"\\n\";\n      console.log(\"the id is\", this.props.match.params.gymId);\n      // const array = tabletop.sheets(this.props.match.params.gymId).toArray();\n      const date = array[0][4];\n      copyString += date + \"\\n\";\n      const time = array[0][5];\n      copyString += time + \"\\n\";\n      console.log(\"the copy string is\", copyString);\n      const instinctList = array.filter(element => element[2] === \"Instinct\");\n      const valorList = array.filter(element => element[2] === \"Valor\");\n      const mysticList = array.filter(element => element[2] === \"Mystic\");\n      console.log(\"the valor list is\", valorList);\n      // console.log(array[0][0]);\n      this.setState({\n        data: array,\n        date,\n        time,\n        instinctList,\n        valorList,\n        mysticList,\n        loading: false,\n        copyString: copyString\n      });\n    } else {\n      this.setState({ loading: false, copyString: copyString });\n    }\n  };\n\n  render() {\n    console.log(\"the copystring is \", this.state.copyString);\n    // this.copyString();\n    let gyms = (\n      <>\n        {/* <h1 className={classes.Gym}>{this.props.match.params.gymId}</h1> */}\n        <div className={classes.List}>\n          <span className={classes.Gym_date_time}>{this.state.date}</span>\n          <span className={classes.Gym_date_time}>{this.state.time}</span>\n          <div className={[classes.List, classes.InstinctList].join(\" \")}>\n            <Logo src={InstinctLogo} type=\"team\" />\n            <ListBuilder\n              list={this.state.instinctList}\n              team=\"Instinct\"\n              text={this.state.copyString}\n              test={this.copyString}\n            />\n          </div>\n          <div className={[classes.List, classes.MysticList].join(\" \")}>\n            <Logo src={MysticLogo} type=\"team\" />\n            <ListBuilder\n              list={this.state.mysticList}\n              team=\"Mystic\"\n              text={this.state.copyString}\n              test={this.copyString()}\n            />\n          </div>\n          <div className={[classes.List, classes.ValorList].join(\" \")}>\n            <Logo src={ValorLogo} type=\"team\" />\n            <ListBuilder\n              list={this.state.valorList}\n              team=\"Valor\"\n              text={this.state.copyString}\n              test={this.copyString}\n            />\n          </div>\n        </div>\n      </>\n    );\n    if (this.state.loading) {\n      //change to just a spinner if need be\n      gyms = <Modal show={this.state.loading} />;\n    }\n    // console.log(\"the id is\", this.state.data[0]);\n    // let date = this.state.data[0];\n    // this.state.data.map(element => {\n    //   date = element[4];\n    //   time = element[5];\n    // });\n    return (\n      <div className=\"container\">\n        <h1 className={classes.Gym}>{this.props.match.params.gymId}</h1>\n        {gyms}\n\n        <Button clicked={this.handleClick}>Copy</Button>\n      </div>\n    );\n  }\n}\n\nexport default Gym;\n"]},"metadata":{},"sourceType":"module"}