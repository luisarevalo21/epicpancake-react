{"ast":null,"code":"var _jsxFileName = \"/Users/luise.arevalo/Desktop/React/epicpancake-react/client/src/containers/Gym/Gym.js\";\nimport React, { Component } from \"react\";\nimport Tabletop from \"tabletop\";\nimport classes from \"./Gym.module.css\";\nimport ListBuilder from \"../../components/ListBuilder/ListBuilder\";\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport Modal from \"../Modal/Modal\";\nimport ValorLogo from \"../../assets/images/Team_Valor.png\";\nimport Logo from \"../../components/Logo/Logo\";\nimport MysticLogo from \"../../assets/images/Team_Mystic.png\";\nimport InstinctLogo from \"../../assets/images/Team_Instinct.png\";\nimport Button from \"../../components/Button/Button\";\n\nclass Gym extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // id: this.props.match.params.gymId,\n      data: [],\n      date: \"\",\n      time: \"\",\n      instinctList: [],\n      valorList: [],\n      mysticList: [],\n      loading: true,\n      copyString: \"\"\n    };\n\n    this.handleClick = () => {\n      console.log(\"button was clicked\");\n    };\n\n    this.showInfo = (data, tabletop) => {\n      const array = tabletop.sheets(this.props.match.params.gymId).toArray();\n      console.log(\"the array is\", array);\n      let copyString = \"\";\n\n      if (array.length !== 0) {\n        copyString += this.props.match.params.gymId + \"\\n\";\n        console.log(\"the id is\", this.props.match.params.gymId); // const array = tabletop.sheets(this.props.match.params.gymId).toArray();\n\n        const date = array[0][4];\n        copyString += date + \"\\n\";\n        const time = array[0][5];\n        copyString += time + \"\\n\";\n        console.log(\"the copy string is\", copyString);\n        const instinctList = array.filter(element => element[2] === \"Instinct\");\n        const valorList = array.filter(element => element[2] === \"Valor\");\n        const mysticList = array.filter(element => element[2] === \"Mystic\");\n        console.log(array[0][0]);\n        this.setState({\n          data: array,\n          date,\n          time,\n          instinctList,\n          valorList,\n          mysticList,\n          loading: false\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"the id is\", this.props.match.params.gymId);\n    Tabletop.init({\n      key: \"https://docs.google.com/spreadsheets/d/15mSqg-uGZTmQBEu_hqvNzaCiSPGi8JapuV46WmsDRvM/edit?usp=sharing\",\n      callback: this.showInfo,\n      simpleSheet: true\n    });\n  }\n\n  render() {\n    let gyms = React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: classes.List,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: classes.Gym_date_time,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.date), React.createElement(\"span\", {\n      className: classes.Gym_date_time,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.time), React.createElement(\"div\", {\n      className: [classes.List, classes.InstinctList].join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      src: InstinctLogo,\n      type: \"team\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(ListBuilder, {\n      list: this.state.instinctList,\n      team: \"Instinct\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: [classes.List, classes.MysticList].join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      src: MysticLogo,\n      type: \"team\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(ListBuilder, {\n      list: this.state.mysticList,\n      team: \"Mystic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: [classes.List, classes.ValorList].join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(ListBuilder, {\n      list: this.state.valorList,\n      team: \"Valor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))));\n\n    if (this.state.loading) {\n      //change to just a spinner if need be\n      gyms = React.createElement(Modal, {\n        show: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      });\n    } // console.log(\"the id is\", this.state.data[0]);\n    // let date = this.state.data[0];\n    // this.state.data.map(element => {\n    //   date = element[4];\n    //   time = element[5];\n    // });\n\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.Gym,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.props.match.params.gymId), gyms, React.createElement(Button, {\n      clicked: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Copy\"));\n  }\n\n}\n\nexport default Gym;","map":{"version":3,"sources":["/Users/luise.arevalo/Desktop/React/epicpancake-react/client/src/containers/Gym/Gym.js"],"names":["React","Component","Tabletop","classes","ListBuilder","Spinner","Modal","ValorLogo","Logo","MysticLogo","InstinctLogo","Button","Gym","state","data","date","time","instinctList","valorList","mysticList","loading","copyString","handleClick","console","log","showInfo","tabletop","array","sheets","props","match","params","gymId","toArray","length","filter","element","setState","componentDidMount","init","key","callback","simpleSheet","render","gyms","List","Gym_date_time","InstinctList","join","MysticList","ValorList"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Tabletop from \"tabletop\";\nimport classes from \"./Gym.module.css\";\nimport ListBuilder from \"../../components/ListBuilder/ListBuilder\";\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport Modal from \"../Modal/Modal\";\nimport ValorLogo from \"../../assets/images/Team_Valor.png\";\nimport Logo from \"../../components/Logo/Logo\";\nimport MysticLogo from \"../../assets/images/Team_Mystic.png\";\nimport InstinctLogo from \"../../assets/images/Team_Instinct.png\";\nimport Button from \"../../components/Button/Button\";\n\nclass Gym extends Component {\n  state = {\n    // id: this.props.match.params.gymId,\n    data: [],\n    date: \"\",\n    time: \"\",\n    instinctList: [],\n    valorList: [],\n    mysticList: [],\n    loading: true,\n    copyString: \"\"\n  };\n\n  componentDidMount() {\n    console.log(\"the id is\", this.props.match.params.gymId);\n\n    Tabletop.init({\n      key:\n        \"https://docs.google.com/spreadsheets/d/15mSqg-uGZTmQBEu_hqvNzaCiSPGi8JapuV46WmsDRvM/edit?usp=sharing\",\n      callback: this.showInfo,\n      simpleSheet: true\n    });\n  }\n  handleClick = () => {\n    console.log(\"button was clicked\");\n  };\n  showInfo = (data, tabletop) => {\n    const array = tabletop.sheets(this.props.match.params.gymId).toArray();\n    console.log(\"the array is\", array);\n    let copyString = \"\";\n    if (array.length !== 0) {\n      copyString += this.props.match.params.gymId + \"\\n\";\n      console.log(\"the id is\", this.props.match.params.gymId);\n      // const array = tabletop.sheets(this.props.match.params.gymId).toArray();\n      const date = array[0][4];\n      copyString += date + \"\\n\";\n      const time = array[0][5];\n      copyString += time + \"\\n\";\n      console.log(\"the copy string is\", copyString);\n      const instinctList = array.filter(element => element[2] === \"Instinct\");\n      const valorList = array.filter(element => element[2] === \"Valor\");\n      const mysticList = array.filter(element => element[2] === \"Mystic\");\n\n      console.log(array[0][0]);\n      this.setState({\n        data: array,\n        date,\n        time,\n        instinctList,\n        valorList,\n        mysticList,\n        loading: false\n      });\n    }\n    this.setState({ loading: false });\n  };\n\n  render() {\n    let gyms = (\n      <>\n        {/* <h1 className={classes.Gym}>{this.props.match.params.gymId}</h1> */}\n        <div className={classes.List}>\n          <span className={classes.Gym_date_time}>{this.state.date}</span>\n          <span className={classes.Gym_date_time}>{this.state.time}</span>\n          <div className={[classes.List, classes.InstinctList].join(\" \")}>\n            <Logo src={InstinctLogo} type=\"team\" />\n            <ListBuilder list={this.state.instinctList} team=\"Instinct\" />\n          </div>\n          <div className={[classes.List, classes.MysticList].join(\" \")}>\n            <Logo src={MysticLogo} type=\"team\" />\n            <ListBuilder list={this.state.mysticList} team=\"Mystic\" />\n          </div>\n          <div className={[classes.List, classes.ValorList].join(\" \")}>\n            {/* <Logo src={ValorLogo} type=\"team\" /> */}\n            <ListBuilder list={this.state.valorList} team=\"Valor\" />\n          </div>\n        </div>\n      </>\n    );\n    if (this.state.loading) {\n      //change to just a spinner if need be\n      gyms = <Modal show={this.state.loading} />;\n    }\n    // console.log(\"the id is\", this.state.data[0]);\n    // let date = this.state.data[0];\n    // this.state.data.map(element => {\n    //   date = element[4];\n    //   time = element[5];\n    // });\n    return (\n      <div className=\"container\">\n        <h1 className={classes.Gym}>{this.props.match.params.gymId}</h1>\n        {gyms}\n\n        <Button clicked={this.handleClick}>Copy</Button>\n      </div>\n    );\n  }\n}\n\nexport default Gym;\n"]},"metadata":{},"sourceType":"module"}