{"ast":null,"code":"var _jsxFileName = \"/Users/luise.arevalo/Desktop/React/epicpancake-react/src/containers/RaidBuilder/RaidBuilder.js\";\nimport React, { Component } from \"react\";\nimport Selector from \"../../components/Selector/Selector\";\nimport Button from \"../../components/Button/Button\";\nimport Tabletop from \"tabletop\";\n\nclass RaidBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pokemonOptions: [],\n      gymOptions: [],\n      time: \"\",\n      selectedRaidBoss: null,\n      selectedGym: null,\n      api: \"https://docs.google.com/spreadsheets/d/1DQUjeYhEBRemcZObEKBj-QvxISX-sVUpbY8yPadg7BY/edit?usp=sharing\"\n    };\n\n    this.showInfo = (data, tabletop) => {\n      this.setState({\n        gymOptions: data\n      });\n      console.log(data);\n    };\n\n    this.configuringTime = currentTime => {\n      const time = currentTime.split(\":\");\n\n      if (time[0] > 12) {\n        time[0] = time[0] - 12;\n      }\n\n      console.log(time);\n      return time[0] + \":\" + time[1];\n    };\n\n    this.handleChange = (key, selectedOption) => {\n      console.log(\"inside the handle change\", selectedOption);\n\n      if (key === \"time\") {\n        this.setState({\n          [key]: selectedOption.target.value\n        });\n      } else {\n        this.setState({\n          [key]: selectedOption.value\n        });\n      }\n    };\n\n    this.handleClick = () => {\n      const time = this.configuringTime(this.state.time);\n      let copyString = \"/newraid \";\n      copyString += this.state.selectedRaidBoss + \" at \" + this.state.selectedGym + \" \" + time + \" \" + \"coordinates\";\n      console.log(copyString);\n    };\n  }\n\n  componentDidMount() {\n    Tabletop.init({\n      key: \"https://docs.google.com/spreadsheets/d/1DQUjeYhEBRemcZObEKBj-QvxISX-sVUpbY8yPadg7BY/edit?usp=sharing\",\n      callback: this.showInfo,\n      simpleSheet: true\n    });\n  }\n\n  render() {\n    const options = [{\n      value: \"-\",\n      label: \"-\"\n    }, {\n      value: \"chocolate\",\n      label: \"Chocolate\"\n    }, {\n      value: \"strawberry\",\n      label: \"Strawberry\"\n    }, {\n      value: \"vanilla\",\n      label: \"Vanilla\"\n    }];\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Selector, {\n      label: \"Raid Boss\",\n      changed: val => this.handleChange(\"selectedRaidBoss\", val),\n      value: this.state.selectedRaidBoss,\n      options: options,\n      type: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Selector, {\n      label: \"Gym\",\n      changed: val => this.handleChange(\"selectedGym\", val),\n      value: this.state.selectedGym,\n      options: options,\n      type: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Selector, {\n      label: \"Start Time\",\n      changed: val => this.handleChange(\"time\", val),\n      value: this.state.time //   options={options}\n      ,\n      type: \"time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), \"*/}\", React.createElement(Button, {\n      clicked: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default RaidBuilder;","map":{"version":3,"sources":["/Users/luise.arevalo/Desktop/React/epicpancake-react/src/containers/RaidBuilder/RaidBuilder.js"],"names":["React","Component","Selector","Button","Tabletop","RaidBuilder","state","pokemonOptions","gymOptions","time","selectedRaidBoss","selectedGym","api","showInfo","data","tabletop","setState","console","log","configuringTime","currentTime","split","handleChange","key","selectedOption","target","value","handleClick","copyString","componentDidMount","init","callback","simpleSheet","render","options","label","val"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Selector from \"../../components/Selector/Selector\";\nimport Button from \"../../components/Button/Button\";\nimport Tabletop from \"tabletop\";\n\nclass RaidBuilder extends Component {\n  state = {\n    pokemonOptions: [],\n    gymOptions: [],\n    time: \"\",\n    selectedRaidBoss: null,\n    selectedGym: null,\n    api:\n      \"https://docs.google.com/spreadsheets/d/1DQUjeYhEBRemcZObEKBj-QvxISX-sVUpbY8yPadg7BY/edit?usp=sharing\"\n  };\n\n  componentDidMount() {\n    Tabletop.init({\n      key:\n        \"https://docs.google.com/spreadsheets/d/1DQUjeYhEBRemcZObEKBj-QvxISX-sVUpbY8yPadg7BY/edit?usp=sharing\",\n      callback: this.showInfo,\n      simpleSheet: true\n    });\n  }\n  showInfo = (data, tabletop) => {\n    this.setState({ gymOptions: data });\n    console.log(data);\n  };\n\n  configuringTime = currentTime => {\n    const time = currentTime.split(\":\");\n    if (time[0] > 12) {\n      time[0] = time[0] - 12;\n    }\n    console.log(time);\n    return time[0] + \":\" + time[1];\n  };\n  handleChange = (key, selectedOption) => {\n    console.log(\"inside the handle change\", selectedOption);\n    if (key === \"time\") {\n      this.setState({ [key]: selectedOption.target.value });\n    } else {\n      this.setState({ [key]: selectedOption.value });\n    }\n  };\n\n  handleClick = () => {\n    const time = this.configuringTime(this.state.time);\n    let copyString = \"/newraid \";\n    copyString +=\n      this.state.selectedRaidBoss +\n      \" at \" +\n      this.state.selectedGym +\n      \" \" +\n      time +\n      \" \" +\n      \"coordinates\";\n    console.log(copyString);\n  };\n  render() {\n    const options = [\n      { value: \"-\", label: \"-\" },\n      { value: \"chocolate\", label: \"Chocolate\" },\n      { value: \"strawberry\", label: \"Strawberry\" },\n      { value: \"vanilla\", label: \"Vanilla\" }\n    ];\n    return (\n      <div className=\"container\">\n        <Selector\n          label=\"Raid Boss\"\n          changed={val => this.handleChange(\"selectedRaidBoss\", val)}\n          value={this.state.selectedRaidBoss}\n          options={options}\n          type=\"input\"\n        />\n        <Selector\n          label=\"Gym\"\n          changed={val => this.handleChange(\"selectedGym\", val)}\n          value={this.state.selectedGym}\n          options={options}\n          type=\"input\"\n        />\n        <Selector\n          label=\"Start Time\"\n          changed={val => this.handleChange(\"time\", val)}\n          value={this.state.time}\n          //   options={options}\n          type=\"time\"\n        />\n        {/* <label style={{ color: \"#6c7d8e\" }}>Start Time</label>\n        {/* <div className=\"form-group\"> */}\n        {/* <input\n          type=\"time\"\n          className=\"form-control\"\n          placeholder=\"Time\"\n          required=\"\"\n          data-fillr-id=\"1465670472\"\n          data-fillr=\"bound\"\n          autoComplete=\"off\"\n          onChange={val => this.handleChange(\"time\", val)}\n        />{\" \"} */}\n        */}\n        {/* </div> */}\n        {/* <Selector\n          label=\"Start Time\"\n          changed={this.handleChanged}\n          selected={this.state.selectedOption}\n          type=\"time\"\n        /> */}\n        <Button clicked={this.handleClick} />\n      </div>\n    );\n  }\n}\n\nexport default RaidBuilder;\n"]},"metadata":{},"sourceType":"module"}