{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.default = function (_ref) {\n  var _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === undefined ? false : _ref$disabled,\n      _ref$title = _ref.title,\n      title = _ref$title === undefined ? '' : _ref$title,\n      tooltipText = _ref.tooltipText,\n      tooltipId = _ref.tooltipId,\n      _ref$tooltipPlacement = _ref.tooltipPlacement,\n      tooltipPlacement = _ref$tooltipPlacement === undefined ? 'bottom' : _ref$tooltipPlacement,\n      renderedButton = _ref.renderedButton,\n      props = _objectWithoutProperties(_ref, ['disabled', 'title', 'tooltipText', 'tooltipId', 'tooltipPlacement', 'renderedButton']);\n\n  if (!disabled) return renderedButton ? renderedButton : _react2.default.createElement(_Button2.default, props, title);\n  return _react2.default.createElement(_OverlayTrigger2.default, {\n    placement: tooltipPlacement,\n    delayHide: 150,\n    overlay: _react2.default.createElement(_Tooltip2.default, {\n      id: tooltipId\n    }, tooltipText)\n  }, _react2.default.createElement('div', {\n    className: 'tooltip-button-helper'\n  }, renderedButton ? renderedButton : _react2.default.createElement(_Button2.default, _extends({}, props, {\n    disabled: true\n  }), title)));\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Button = require('react-bootstrap/lib/Button');\n\nvar _Button2 = _interopRequireDefault(_Button);\n\nvar _Tooltip = require('react-bootstrap/lib/Tooltip');\n\nvar _Tooltip2 = _interopRequireDefault(_Tooltip);\n\nvar _OverlayTrigger = require('react-bootstrap/lib/OverlayTrigger');\n\nvar _OverlayTrigger2 = _interopRequireDefault(_OverlayTrigger);\n\nrequire('./TooltipButton.css');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n} // button that, if disabled, shows a tooltip explaining why it's disabled\n// by default, this component will render the button and disable it if prop disabled is set\n// but optionally, a rendered button can be passed as prop renderedButton (the caller must then disable it themselves)","map":null,"metadata":{},"sourceType":"script"}