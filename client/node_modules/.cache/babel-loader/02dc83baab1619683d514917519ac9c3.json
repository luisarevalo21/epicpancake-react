{"ast":null,"code":"var _jsxFileName = \"/Users/luise.arevalo/Desktop/React/epicpancake-react/client/src/containers/Gym/Gym.js\";\nimport React, { Component } from \"react\";\nimport Tabletop from \"tabletop\";\nimport classes from \"./Gym.module.css\";\nimport ListBuilder from \"../../components/ListBuilder/ListBuilder\";\n\nclass Gym extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // id: this.props.match.params.gymId,\n      data: [],\n      date: \"\",\n      time: \"\",\n      instinctList: [],\n      valorList: [],\n      mysticList: []\n    };\n\n    this.showInfo = (data, tabletop) => {\n      console.log(\"the id is\", this.props.match.params.gymId);\n      const array = tabletop.sheets(this.props.match.params.gymId).toArray();\n      const date = array[0][4];\n      const time = array[0][5];\n      const instinctList = array.filter(element => element[2] === \"Instinct\");\n      const valorList = array.filter(element => element[2] === \"Valor\");\n      const mysticList = array.filter(element => element[2] === \"Mystic\");\n      console.log(array[0][0]);\n      this.setState({\n        data: array,\n        date,\n        time,\n        instinctList,\n        valorList,\n        mysticList\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"the id is\", this.props.match.params.gymId);\n    Tabletop.init({\n      key: \"https://docs.google.com/spreadsheets/d/15mSqg-uGZTmQBEu_hqvNzaCiSPGi8JapuV46WmsDRvM/edit?usp=sharing\",\n      callback: this.showInfo,\n      simpleSheet: true\n    });\n  }\n\n  render() {\n    // console.log(\"the id is\", this.state.data[0]);\n    // let date = this.state.data[0];\n    // this.state.data.map(element => {\n    //   date = element[4];\n    //   time = element[5];\n    // });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.Gym,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.props.match.params.gymId), React.createElement(\"div\", {\n      className: classes.List,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: [classes.List, classes.InstinctList].join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(ListBuilder, {\n      list: this.state.instinctList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.MysticList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Mystic image\", React.createElement(ListBuilder, {\n      list: this.state.mysticList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Gym;","map":{"version":3,"sources":["/Users/luise.arevalo/Desktop/React/epicpancake-react/client/src/containers/Gym/Gym.js"],"names":["React","Component","Tabletop","classes","ListBuilder","Gym","state","data","date","time","instinctList","valorList","mysticList","showInfo","tabletop","console","log","props","match","params","gymId","array","sheets","toArray","filter","element","setState","componentDidMount","init","key","callback","simpleSheet","render","List","InstinctList","join","MysticList"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Tabletop from \"tabletop\";\nimport classes from \"./Gym.module.css\";\nimport ListBuilder from \"../../components/ListBuilder/ListBuilder\";\nclass Gym extends Component {\n  state = {\n    // id: this.props.match.params.gymId,\n    data: [],\n    date: \"\",\n    time: \"\",\n    instinctList: [],\n    valorList: [],\n    mysticList: []\n  };\n\n  componentDidMount() {\n    console.log(\"the id is\", this.props.match.params.gymId);\n\n    Tabletop.init({\n      key:\n        \"https://docs.google.com/spreadsheets/d/15mSqg-uGZTmQBEu_hqvNzaCiSPGi8JapuV46WmsDRvM/edit?usp=sharing\",\n      callback: this.showInfo,\n      simpleSheet: true\n    });\n  }\n  showInfo = (data, tabletop) => {\n    console.log(\"the id is\", this.props.match.params.gymId);\n    const array = tabletop.sheets(this.props.match.params.gymId).toArray();\n    const date = array[0][4];\n    const time = array[0][5];\n    const instinctList = array.filter(element => element[2] === \"Instinct\");\n    const valorList = array.filter(element => element[2] === \"Valor\");\n    const mysticList = array.filter(element => element[2] === \"Mystic\");\n\n    console.log(array[0][0]);\n    this.setState({\n      data: array,\n      date,\n      time,\n      instinctList,\n      valorList,\n      mysticList\n    });\n  };\n\n  render() {\n    // console.log(\"the id is\", this.state.data[0]);\n    // let date = this.state.data[0];\n    // this.state.data.map(element => {\n    //   date = element[4];\n    //   time = element[5];\n    // });\n    return (\n      <div>\n        <h1 className={classes.Gym}>{this.props.match.params.gymId}</h1>\n        <div className={classes.List}>\n          {/* <span className={classes.Gym_date_time}>{this.state.date}</span>\n          <span className={classes.Gym_date_time}>{this.state.time}</span> */}\n          <div className={[classes.List, classes.InstinctList].join(\" \")}>\n            <ListBuilder list={this.state.instinctList} />\n          </div>\n          <div className={classes.MysticList}>\n            Mystic image\n            <ListBuilder list={this.state.mysticList} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Gym;\n"]},"metadata":{},"sourceType":"module"}