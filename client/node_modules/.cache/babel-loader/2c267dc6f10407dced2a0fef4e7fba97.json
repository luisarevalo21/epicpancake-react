{"ast":null,"code":"var _jsxFileName = \"/Users/luise.arevalo/Desktop/React/epicpancake-react/client/src/components/ListBuilder/ListBuilder.js\";\nimport React from \"react\";\nimport classes from \"./ListBuilder.module.css\";\nimport Logo from \"../Logo/Logo\";\nimport ValorImage from \"../../assets/images/Team_Valor.png\";\n\nconst listBuilder = props => {\n  console.log(\"the string is\", props.text);\n  console.log(\"the props are\", props);\n  let list = null;\n  let group = props.team + \"\\n\"; //   props.text += props.Team;\n\n  if (props.list.length !== 0) {\n    list = props.list.map(element => {\n      if (element[6].trim() === \"My friend will play for me (enter their name in the comment)\") {\n        group += element[0].trim() + \", \" + element[1].trim() + \", \" + element[3].trim() + \", \" + \"via proxy\";\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, element[0].trim() + \", \" + element[1].trim() + \", \" + element[3].trim() + \", \" + \"via proxy\");\n      } else if (element[6].trim() === \"I need someone to play for me (add your telegram name in the comments so an admin can contact you)\") {\n        group += element[0].trim() + \", \" + element[1].trim() + \", \" + element[3].trim() + \", \" + \"needs proxy\";\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, element[0].trim() + \", \" + element[1].trim() + \", \" + element[3].trim() + \", \" + \"needs proxy\");\n      } else {\n        group += element[0].trim() + \", \" + element[1].trim() + \", \" + element[3].trim();\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, element[0].trim() + \", \" + element[1].trim() + \", \" + element[3].trim());\n      }\n    });\n  } else {\n    return React.createElement(\"div\", {\n      className: [classes.List, \"container\"].join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"No \", props.team)));\n  }\n\n  console.log(\"group is \", group);\n\n  const test = group => {\n    console.log(\"group is\", group); // props.test(group);\n  };\n\n  console.log(\"calling test now\");\n  test(group);\n  return React.createElement(\"div\", {\n    className: [classes.List, \"container\"].join(\" \"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Logo, {\n    src: ValorImage,\n    type: \"team\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, list, \" \"));\n};\n\nexport default listBuilder;","map":{"version":3,"sources":["/Users/luise.arevalo/Desktop/React/epicpancake-react/client/src/components/ListBuilder/ListBuilder.js"],"names":["React","classes","Logo","ValorImage","listBuilder","props","console","log","text","list","group","team","length","map","element","trim","List","join","test"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classes from \"./ListBuilder.module.css\";\nimport Logo from \"../Logo/Logo\";\nimport ValorImage from \"../../assets/images/Team_Valor.png\";\nconst listBuilder = props => {\n  console.log(\"the string is\", props.text);\n\n  console.log(\"the props are\", props);\n  let list = null;\n  let group = props.team + \"\\n\";\n\n  //   props.text += props.Team;\n\n  if (props.list.length !== 0) {\n    list = props.list.map(element => {\n      if (\n        element[6].trim() ===\n        \"My friend will play for me (enter their name in the comment)\"\n      ) {\n        group +=\n          element[0].trim() +\n          \", \" +\n          element[1].trim() +\n          \", \" +\n          element[3].trim() +\n          \", \" +\n          \"via proxy\";\n        return (\n          <li>\n            {element[0].trim() +\n              \", \" +\n              element[1].trim() +\n              \", \" +\n              element[3].trim() +\n              \", \" +\n              \"via proxy\"}\n          </li>\n        );\n      } else if (\n        element[6].trim() ===\n        \"I need someone to play for me (add your telegram name in the comments so an admin can contact you)\"\n      ) {\n        group +=\n          element[0].trim() +\n          \", \" +\n          element[1].trim() +\n          \", \" +\n          element[3].trim() +\n          \", \" +\n          \"needs proxy\";\n        return (\n          <li>\n            {element[0].trim() +\n              \", \" +\n              element[1].trim() +\n              \", \" +\n              element[3].trim() +\n              \", \" +\n              \"needs proxy\"}\n          </li>\n        );\n      } else {\n        group +=\n          element[0].trim() +\n          \", \" +\n          element[1].trim() +\n          \", \" +\n          element[3].trim();\n        return (\n          <li>\n            {element[0].trim() +\n              \", \" +\n              element[1].trim() +\n              \", \" +\n              element[3].trim()}\n          </li>\n        );\n      }\n    });\n  } else {\n    return (\n      <div className={[classes.List, \"container\"].join(\" \")}>\n        <ul>\n          <li>No {props.team}</li>\n        </ul>\n      </div>\n    );\n  }\n  console.log(\"group is \", group);\n  const test = group => {\n    console.log(\"group is\", group);\n    // props.test(group);\n  };\n  console.log(\"calling test now\");\n  test(group);\n  return (\n    <div className={[classes.List, \"container\"].join(\" \")}>\n      <Logo src={ValorImage} type=\"team\" />\n      <ul>{list} </ul>\n    </div>\n  );\n};\nexport default listBuilder;\n"]},"metadata":{},"sourceType":"module"}