{"ast":null,"code":"var _jsxFileName = \"/Users/luise.arevalo/Desktop/React/epicpancake-react/client/src/containers/Gym/Gym.js\";\nimport React, { Component } from \"react\";\nimport Tabletop from \"tabletop\";\nimport classes from \"./Gym.module.css\";\n\nclass Gym extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // id: this.props.match.params.gymId,\n      data: []\n    };\n\n    this.showInfo = (data, tabletop) => {\n      console.log(\"the id is\", this.props.match.params.gymId);\n      const array = tabletop.sheets(this.props.match.params.gymId).toArray();\n      this.setState({\n        data: array\n      });\n    };\n\n    this.makeList = data => {\n      console.log(\"the datae is \", data);\n      let date = \"\";\n      let time = \"\";\n      let list = \"\";\n      let instinctList = \"\";\n      let valorList = \"\";\n      let mysticList = \"\";\n\n      if (data && data[0]) {\n        date = data[0][4];\n        time = data[0][5];\n        console.log(\"inside the if\");\n        console.log(data[0][4]);\n        instinctList = data.filter(element => element[2] === \"Instinct\");\n        valorList = data.filter(element => element[2] === \"Valor\");\n        mysticList = data.filter(element => element[2] === \"Mystic\");\n        console.log(\"the mystic list is \", mysticList);\n        return React.createElement(\"div\", {\n          className: classes.Gym,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: classes.Gym_date_time,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, date), React.createElement(\"span\", {\n          className: classes.Gym_date_time,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, time), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }), this.generateList(instinctList)), React.createElement(\"div\", {\n          className: classes.MysticList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, this.generateList(mysticList))), React.createElement(\"div\", {\n          className: classes.ValorList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, this.generateList(valorList))));\n      }\n    };\n\n    this.generateList = list => {\n      console.log(\"the list is\", list);\n      let finishedList = \"\";\n      finishedList = list.map(element => {\n        if (element[6].trim() === \"My friend will play for me (enter their name in the comment)\") {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, element[0].trim() + \", \" + element[1].trim() + \", \" + element[3].trim() + \", \" + \"via proxy\");\n        } else if (element[6].trim() === \"I need someone to play for me (add your telegram name in the comments so an admin can contact you)\") {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, element[0].trim() + \", \" + element[1].trim() + \", \" + element[3].trim() + \", \" + \"needs proxy\");\n        } else {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, element[0].trim() + \", \" + element[1].trim() + \", \" + element[3].trim());\n        }\n      });\n      return finishedList;\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"the id is\", this.props.match.params.gymId);\n    Tabletop.init({\n      key: \"https://docs.google.com/spreadsheets/d/15mSqg-uGZTmQBEu_hqvNzaCiSPGi8JapuV46WmsDRvM/edit?usp=sharing\",\n      callback: this.showInfo,\n      simpleSheet: true\n    });\n  }\n\n  render() {\n    // console.log(\"the id is\", this.state.data[0]);\n    // let date = this.state.data[0];\n    let time = \"\"; // this.state.data.map(element => {\n    //   date = element[4];\n    //   time = element[5];\n    // });\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.Gym,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.props.match.params.gymId), React.createElement(\"div\", {\n      className: classes.List,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.makeList(this.state.data)));\n  }\n\n}\n\nexport default Gym;","map":{"version":3,"sources":["/Users/luise.arevalo/Desktop/React/epicpancake-react/client/src/containers/Gym/Gym.js"],"names":["React","Component","Tabletop","classes","Gym","state","data","showInfo","tabletop","console","log","props","match","params","gymId","array","sheets","toArray","setState","makeList","date","time","list","instinctList","valorList","mysticList","filter","element","Gym_date_time","generateList","MysticList","ValorList","finishedList","map","trim","componentDidMount","init","key","callback","simpleSheet","render","List"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Tabletop from \"tabletop\";\nimport classes from \"./Gym.module.css\";\n\nclass Gym extends Component {\n  state = {\n    // id: this.props.match.params.gymId,\n    data: []\n  };\n\n  componentDidMount() {\n    console.log(\"the id is\", this.props.match.params.gymId);\n\n    Tabletop.init({\n      key:\n        \"https://docs.google.com/spreadsheets/d/15mSqg-uGZTmQBEu_hqvNzaCiSPGi8JapuV46WmsDRvM/edit?usp=sharing\",\n      callback: this.showInfo,\n      simpleSheet: true\n    });\n  }\n  showInfo = (data, tabletop) => {\n    console.log(\"the id is\", this.props.match.params.gymId);\n    const array = tabletop.sheets(this.props.match.params.gymId).toArray();\n    this.setState({ data: array });\n  };\n  makeList = data => {\n    console.log(\"the datae is \", data);\n    let date = \"\";\n    let time = \"\";\n    let list = \"\";\n    let instinctList = \"\";\n    let valorList = \"\";\n    let mysticList = \"\";\n    if (data && data[0]) {\n      date = data[0][4];\n      time = data[0][5];\n      console.log(\"inside the if\");\n      console.log(data[0][4]);\n\n      instinctList = data.filter(element => element[2] === \"Instinct\");\n\n      valorList = data.filter(element => element[2] === \"Valor\");\n\n      mysticList = data.filter(element => element[2] === \"Mystic\");\n\n      console.log(\"the mystic list is \", mysticList);\n\n      return (\n        <div className={classes.Gym}>\n          <span className={classes.Gym_date_time}>{date}</span>\n          <span className={classes.Gym_date_time}>{time}</span>\n          <div><ul>\n              \n          </ul>{this.generateList(instinctList)}</div>\n          <div className={classes.MysticList}>\n            <ul>{this.generateList(mysticList)}</ul>\n          </div>\n          <div className={classes.ValorList}>\n            <ul>{this.generateList(valorList)}</ul>\n          </div>\n        </div>\n      );\n    }\n  };\n  generateList = list => {\n    console.log(\"the list is\", list);\n    let finishedList = \"\";\n    finishedList = list.map(element => {\n      if (\n        element[6].trim() ===\n        \"My friend will play for me (enter their name in the comment)\"\n      ) {\n        return (\n          <li>\n            {element[0].trim() +\n              \", \" +\n              element[1].trim() +\n              \", \" +\n              element[3].trim() +\n              \", \" +\n              \"via proxy\"}\n          </li>\n        );\n      } else if (\n        element[6].trim() ===\n        \"I need someone to play for me (add your telegram name in the comments so an admin can contact you)\"\n      ) {\n        return (\n          <li>\n            {element[0].trim() +\n              \", \" +\n              element[1].trim() +\n              \", \" +\n              element[3].trim() +\n              \", \" +\n              \"needs proxy\"}\n          </li>\n        );\n      } else {\n        return (\n          <li>\n            {element[0].trim() +\n              \", \" +\n              element[1].trim() +\n              \", \" +\n              element[3].trim()}\n          </li>\n        );\n      }\n    });\n    return finishedList;\n  };\n  render() {\n    // console.log(\"the id is\", this.state.data[0]);\n    // let date = this.state.data[0];\n    let time = \"\";\n    // this.state.data.map(element => {\n    //   date = element[4];\n    //   time = element[5];\n    // });\n    return (\n      <div>\n        <h1 className={classes.Gym}>{this.props.match.params.gymId}</h1>\n        <div className={classes.List}>{this.makeList(this.state.data)}</div>\n      </div>\n    );\n  }\n}\n\nexport default Gym;\n"]},"metadata":{},"sourceType":"module"}