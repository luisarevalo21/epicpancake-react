{"ast":null,"code":"var _jsxFileName = \"/Users/luise.arevalo/Desktop/React/epicpancake-react/client/src/components/ListBuilder/ListBuilder.js\";\nimport React, { Component } from \"react\";\nimport classes from \"./ListBuilder.module.css\";\nimport Logo from \"../Logo/Logo\";\nimport ValorImage from \"../../assets/images/Team_Valor.png\";\n\nclass ListBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      copyString: \"\",\n      list: \"\"\n    };\n\n    this.buildList = () => {\n      let list = null;\n      let group = this.props.team + \"\\n\"; //   props.text += props.Team;\n\n      if (this.props.list.length !== 0) {\n        list = this.props.list.map(element => {\n          if (element[6].trim() === \"My friend will play for me (enter their name in the comment)\") {\n            group += element[0].trim() + \", \" + element[1].trim() + \", \" + element[3].trim() + \", \" + \"via proxy\";\n            return React.createElement(\"li\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 33\n              },\n              __self: this\n            }, element[0].trim() + \", \" + element[1].trim() + \", \" + element[3].trim() + \", \" + \"via proxy\");\n          } else if (element[6].trim() === \"I need someone to play for me (add your telegram name in the comments so an admin can contact you)\") {\n            group += element[0].trim() + \", \" + element[1].trim() + \", \" + element[3].trim() + \", \" + \"needs proxy\";\n            return React.createElement(\"li\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56\n              },\n              __self: this\n            }, element[0].trim() + \", \" + element[1].trim() + \", \" + element[3].trim() + \", \" + \"needs proxy\");\n          } else {\n            group += element[0].trim() + \", \" + element[1].trim() + \", \" + element[3].trim();\n            return React.createElement(\"li\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            }, element[0].trim() + \", \" + element[1].trim() + \", \" + element[3].trim());\n          }\n        });\n      } else {\n        return React.createElement(\"div\", {\n          className: [classes.List, \"container\"].join(\" \"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"No \", this.props.team)));\n      }\n    };\n  }\n\n  render() {\n    // console.log(\"the string is\", this.props.text);\n    // // this.test();\n    // console.log(\"the props are\", this.props);\n    // console.log(\"group is \", group);\n    console.log(\"calling test now\"); // this.setState({ copyString: group });\n\n    return React.createElement(\"div\", {\n      className: [classes.List, \"container\"].join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, list, \" \"));\n  }\n\n}\n\nexport default ListBuilder;","map":{"version":3,"sources":["/Users/luise.arevalo/Desktop/React/epicpancake-react/client/src/components/ListBuilder/ListBuilder.js"],"names":["React","Component","classes","Logo","ValorImage","ListBuilder","state","copyString","list","buildList","group","props","team","length","map","element","trim","List","join","render","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport classes from \"./ListBuilder.module.css\";\nimport Logo from \"../Logo/Logo\";\nimport ValorImage from \"../../assets/images/Team_Valor.png\";\n\nclass ListBuilder extends Component {\n  state = {\n    copyString: \"\",\n    list: \"\"\n  };\n\n  buildList = () => {\n    let list = null;\n    let group = this.props.team + \"\\n\";\n\n    //   props.text += props.Team;\n\n    if (this.props.list.length !== 0) {\n      list = this.props.list.map(element => {\n        if (\n          element[6].trim() ===\n          \"My friend will play for me (enter their name in the comment)\"\n        ) {\n          group +=\n            element[0].trim() +\n            \", \" +\n            element[1].trim() +\n            \", \" +\n            element[3].trim() +\n            \", \" +\n            \"via proxy\";\n          return (\n            <li>\n              {element[0].trim() +\n                \", \" +\n                element[1].trim() +\n                \", \" +\n                element[3].trim() +\n                \", \" +\n                \"via proxy\"}\n            </li>\n          );\n        } else if (\n          element[6].trim() ===\n          \"I need someone to play for me (add your telegram name in the comments so an admin can contact you)\"\n        ) {\n          group +=\n            element[0].trim() +\n            \", \" +\n            element[1].trim() +\n            \", \" +\n            element[3].trim() +\n            \", \" +\n            \"needs proxy\";\n          return (\n            <li>\n              {element[0].trim() +\n                \", \" +\n                element[1].trim() +\n                \", \" +\n                element[3].trim() +\n                \", \" +\n                \"needs proxy\"}\n            </li>\n          );\n        } else {\n          group +=\n            element[0].trim() +\n            \", \" +\n            element[1].trim() +\n            \", \" +\n            element[3].trim();\n          return (\n            <li>\n              {element[0].trim() +\n                \", \" +\n                element[1].trim() +\n                \", \" +\n                element[3].trim()}\n            </li>\n          );\n        }\n      });\n    } else {\n      return (\n        <div className={[classes.List, \"container\"].join(\" \")}>\n          <ul>\n            <li>No {this.props.team}</li>\n          </ul>\n        </div>\n      );\n    }\n  };\n  render() {\n    // console.log(\"the string is\", this.props.text);\n    // // this.test();\n    // console.log(\"the props are\", this.props);\n\n    // console.log(\"group is \", group);\n\n    console.log(\"calling test now\");\n    // this.setState({ copyString: group });\n    return (\n      <div className={[classes.List, \"container\"].join(\" \")}>\n        {/* <Logo src={ValorImage} type=\"team\" /> */}\n        <ul>{list} </ul>\n      </div>\n    );\n  }\n}\nexport default ListBuilder;\n"]},"metadata":{},"sourceType":"module"}