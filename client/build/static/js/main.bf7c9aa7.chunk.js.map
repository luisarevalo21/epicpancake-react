{"version":3,"sources":["assets/images/Team_Valor.png","components/Button/Button.module.css","components/Logo/Logo.module.css","components/ListBuilder/ListBuilder.module.css","assets/images/ep-logo-green.svg","components/Paragraph/Paragraph.module.css","components/Spinner/Spinner.module.css","assets/images/Team_Mystic.png","assets/images/Team_Instinct.png","logo.svg","containers/Gym/Gym.module.css","components/Selector/Selector.js","components/Button/Button.js","containers/RaidBuilder/RaidBuilder.js","components/Logo/Logo.js","components/Navbar/Navbar.js","components/Paragraph/Paragraph.js","containers/Welcome/Welcome.js","components/Spinner/Spinner.js","components/Modal/Modal.js","containers/Ex_Gyms/ExGyms.js","components/ListBuilder/ListBuilder.js","containers/Gym/Gym.js","App.js","serviceWorker.js","index.js","components/Selector/Selector.module.css","containers/Welcome/Welcome.module.css","containers/Ex_Gyms/ExGyms.module.css"],"names":["module","exports","__webpack_require__","p","Button","popover","Logo","TeamLogo","List","Paragraph","Loader","load2","Gym","InstinctList","MysticList","ValorList","Gym_date_time","Raidlist","customStyles","option","provided","state","height","arguments","length","undefined","Object","objectSpread","fontWeight","isDisabled","color","control","base","minHeight","cursor","selector","props","input","type","react_default","a","createElement","style","label","react_select_browser_esm","options","onChange","changed","value","selected","styles","className","classes","Select","Input","join","placeholder","required","data-fillr-id","data-fillr","autoComplete","Selector","button","Fragment","onClick","clicked","react_tippy","title","position","trigger","delay","RaidBuilder","pokemonOptions","gymOptions","time","selectedRaidBoss","selectedGym","coordiantes","copied","copyString","api","showInfo","data","tabletop","sheets","toArray","map","element","coordinates","_this","setState","configuringTime","currentTime","split","console","log","handleChange","key","selectedOption","_this$setState","_this$setState2","_this$setState3","defineProperty","target","handleClick","Tabletop","init","callback","this","simpleSheet","_this2","copy","debug","message","val","Component","logo","react_router_dom","to","Image_default","src","image","alt","navbar","Navbar","collapseOnSelect","expand","Toggle","aria-controls","Collapse","id","Nav","NavItem","exact","href","paragraph","details","link","text","Welcome","admins","name","Header","spinner","modal","Modal_default","show","onHide","hide","centered","Spinner","ExGyms","gyms","listName","active_gyms","loading","handleHide","active","push","window","location","list","names","includes","concat","newStyle","gymName","Modal_Modal","Button_Div","listBuilder","group","team","test","Math","random","trim","myFinalString","date","instinctList","valorList","mysticList","refs","select","document","execCommand","dataFromChild","array","match","params","gymId","filter","InstinctLogo","ListBuilder","MysticLogo","ValorLogo","ref","App","components_Navbar_Navbar","react_router","path","component","Boolean","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister","Links"],"mappings":"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","file":"static/js/main.bf7c9aa7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Team_Valor.9bda9e95.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\",\"popover\":\"Button_popover__V39Yw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\",\"TeamLogo\":\"Logo_TeamLogo__167Wp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ListBuilder_List__1e3mX\"};","module.exports = __webpack_public_path__ + \"static/media/ep-logo-green.29e50bae.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paragraph\":\"Paragraph_Paragraph__1B3fq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2hakv\",\"load2\":\"Spinner_load2__XNvqU\"};","module.exports = __webpack_public_path__ + \"static/media/Team_Mystic.f4b6ccc4.png\";","module.exports = __webpack_public_path__ + \"static/media/Team_Instinct.d32464e2.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Gym\":\"Gym_Gym__2YEAE\",\"List\":\"Gym_List__2shJl\",\"InstinctList\":\"Gym_InstinctList__28Yap\",\"MysticList\":\"Gym_MysticList__2Y4DU\",\"ValorList\":\"Gym_ValorList__1_hji\",\"Gym_date_time\":\"Gym_Gym_date_time__-6JfO\",\"Raidlist\":\"Gym_Raidlist__20eRN\"};","import React from \"react\";\nimport Select from \"react-select\";\nimport classes from \"./Selector.module.css\";\nconst options = [\n  { value: \"-\", label: \"-\" },\n  { value: \"chocolate\", label: \"Chocolate\" },\n  { value: \"strawberry\", label: \"Strawberry\" },\n  { value: \"vanilla\", label: \"Vanilla\" }\n];\nconst customStyles = {\n  option: (provided, state, height = \"60px\") => ({\n    ...provided,\n    fontWeight: state.isDisabled ? \"bold\" : null,\n    color: state.isDisabled ? \"black\" : null,\n    height: height\n  }),\n  control: base => ({\n    ...base,\n    height: 35,\n    minHeight: 60,\n    cursor: \"pointer\"\n  })\n  //   singleValue: (provided, state) => {\n  //     const opacity = state.isDisabled ? 1 : 0.5;\n\n  //     return { ...provided, opacity };\n  //   }\n};\nconst selector = props => {\n  let input = null;\n  switch (props.type) {\n    case \"input\":\n      input = (\n        <div>\n          <label style={{ color: \"#6c7d8e\" }}>{props.label}</label>\n          <Select\n            options={props.options}\n            onChange={props.changed}\n            value={props.selected}\n            styles={customStyles}\n            className={classes.Select}\n          />\n        </div>\n      );\n      break;\n\n    case \"time\":\n      input = (\n        <div>\n          <label style={{ color: \"#6c7d8e\" }}>{props.label}</label>\n          {/* <div className=\"form-group\"> */}\n          <input\n            type=\"time\"\n            className={[\"form-control\", classes.Input].join(\" \")}\n            placeholder=\"Time\"\n            required=\"\"\n            data-fillr-id=\"1465670472\"\n            data-fillr=\"bound\"\n            autoComplete=\"off\"\n            onChange={props.changed}\n          />\n        </div>\n      );\n  }\n\n  return <div className={classes.Selector}>{input}</div>;\n};\nexport default selector;\n","import React from \"react\";\nimport classes from \"./Button.module.css\";\nimport ReactTooltip from \"react-tooltip\";\nimport Overlay from \"react-bootstrap/Overlay\";\nimport { Tooltip } from \"react-tippy\";\nimport Popover from \"react-bootstrap/Popover\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\n\nconst button = props => {\n  switch (props.type) {\n    case \"signup\":\n      return (\n        <>\n          <button className={classes.Button} onClick={props.clicked}>\n            Sign Up\n          </button>\n        </>\n      );\n    case \"copy\":\n      return (\n        <>\n          {/* <button onClick={props.clicked}>Copy</button> */}\n          <Tooltip\n            // options\n            title=\"Copied\"\n            position=\"bottom\"\n            trigger=\"click\"\n            delay={[0, 3000]}\n          >\n            <button className={classes.Button} onClick={props.clicked}>\n              Copy\n            </button>\n          </Tooltip>\n          {/* <OverlayTrigger\n    trigger=\"click\"\n    placement=\"right\"\n    className={classes.popover}\n    onHide={() => console.log(\"hiding\")}\n    overlay={<Tooltip id=\"popover-contained\">Copied</Tooltip>}\n    delay=\"2000\"\n  >\n    <button className={classes.Button} onClick={props.clicked}>\n      Copy\n    </button>\n  </OverlayTrigger> */}\n          {/* <ReactTooltip id=\"clickme\" place=\"right\" clickable={true}>\n    {tooltip}\n  </ReactTooltip> */}\n        </>\n      );\n  }\n};\n\nexport default button;\n","import React, { Component } from \"react\";\nimport Selector from \"../../components/Selector/Selector\";\nimport Button from \"../../components/Button/Button\";\nimport \"./RaidBuilder.css\";\nimport Tabletop from \"tabletop\";\nimport copy from \"copy-to-clipboard\";\n\nclass RaidBuilder extends Component {\n  state = {\n    pokemonOptions: [],\n    gymOptions: [],\n    time: \"\",\n    selectedRaidBoss: null,\n    selectedGym: null,\n    coordiantes: null,\n    copied: false,\n    copyString: \"\",\n    api:\n      \"https://docs.google.com/spreadsheets/d/1DQUjeYhEBRemcZObEKBj-QvxISX-sVUpbY8yPadg7BY/edit?usp=sharing\"\n  };\n\n  componentDidMount() {\n    Tabletop.init({\n      key:\n        \"https://docs.google.com/spreadsheets/d/1DQUjeYhEBRemcZObEKBj-QvxISX-sVUpbY8yPadg7BY/edit?usp=sharing\",\n      callback: this.showInfo,\n      simpleSheet: true\n    });\n  }\n  showInfo = (data, tabletop) => {\n    let pokemon = tabletop.sheets(\"Pokemon List\").toArray();\n    // console.log(\"the pokemon are \", pokemon);\n    let pokemonOptions = pokemon.map(element => {\n      return { label: element, value: element };\n    });\n    let gyms = tabletop.sheets(\"Coords\").toArray();\n    // console.log(\"the gys are\", gyms);\n    // let gyms = [];\n    // this.setState({ gymOptions: data });\n    let gymOptions = gyms.map(element => {\n      //   console.log(\"the element is \", element[0]);\n\n      if (element[1] === \"\") {\n        return {\n          label: element[0],\n          isDisabled: true\n          //   style: \"bold\"\n        };\n      }\n      return {\n        value: element[0],\n        label: element[0],\n        coordinates: element[1]\n      };\n      //   console.log(\"element\", element[\"N/A\"]);\n      //   console.log(\"inside the map \");\n      //   if (element[\"N/A\"] === \"\") {\n      //     console.log(\"insid ethe if\");\n      //     return {\n      //       label: element[\"Blank Entry\"],\n      //       isDisabled: true\n      //       //   style: \"bold\"\n      //     };\n      //   }\n\n      //   gyms.push({\n      //     value: element[\"Blank Entry\"],\n      //     label: element[\"Blank Entry\"]\n      //   });\n      //   console.log(element[\"Blank Entry\"]);\n    });\n    this.setState({ gymOptions: gymOptions, pokemonOptions: pokemonOptions });\n  };\n\n  configuringTime = currentTime => {\n    const time = currentTime.split(\":\");\n    if (time[0] > 12) {\n      time[0] = time[0] - 12;\n    }\n    console.log(time);\n    return time[0] + \":\" + time[1];\n  };\n  handleChange = (key, selectedOption) => {\n    // console.log(\"the key is\", key);\n    // console.log(\"the seelcted option is\", selectedOption);\n\n    // console.log(\"the option is\", selectedOption.value[0]);\n    switch (key) {\n      case \"time\":\n        this.setState({ [key]: selectedOption.target.value, copied: false });\n        break;\n      case \"selectedRaidBoss\":\n        this.setState({ [key]: selectedOption.value[0], copied: false });\n        break;\n      case \"selectedGym\":\n        this.setState({\n          [key]: selectedOption.value,\n          coordiantes: selectedOption.coordinates,\n          copied: false\n        });\n        break;\n    }\n    // console.log(\"inside the handle change\", selectedOption);\n    // if (key === \"time\") {\n    //   this.setState({ [key]: selectedOption.target.value });\n    // } else {\n    //   this.setState({ [key]: selectedOption });\n    // }\n  };\n  copyString = () => {\n    this.setState({ copied: true });\n  };\n  handleClick = () => {\n    // console.log(\"the selected raid boss is\", this.state.selectedGym);\n    const time = this.configuringTime(this.state.time);\n    // console.log(\"the time is\", time);\n    let copyString = \"/newraid \";\n    copyString +=\n      this.state.selectedRaidBoss +\n      \" at \" +\n      this.state.selectedGym +\n      \" \" +\n      time +\n      \" \" +\n      this.state.coordiantes;\n    // console.log(copyString);\n    this.setState({ copyString: copyString, copied: true });\n  };\n  render() {\n    // console.log(\"this.state.copystring\", this.state.copied);\n\n    if (this.state.copyString) {\n      copy(this.state.copyString, {\n        debug: true,\n        message: null\n      });\n    }\n\n    // const options = [\n    //   { optgroup: \"Things\", value: \"thing1\", label: \"Thing 1\" },\n    //   { optgroup: \"Things\", value: \"thing2\", label: \"Thing 2\" },\n    //   { optgroup: \"Things\", value: \"thing3\", label: \"Thing 3\" },\n    //   { optgroup: \"Stuffs\", value: \"stuff1\", label: \"Stuff 1\" },\n    //   { optgroup: \"Piles\", value: \"pile1\", label: \"Pile 1\" },\n    //   { value: \"pile1\", label: \"Pile 1\" }\n    // ];\n    return (\n      <div>\n        <Selector\n          label=\"Raid Boss\"\n          changed={val => this.handleChange(\"selectedRaidBoss\", val)}\n          value={this.state.selectedRaidBoss}\n          options={this.state.pokemonOptions}\n          type=\"input\"\n        />\n        <Selector\n          label=\"Gym\"\n          changed={val => this.handleChange(\"selectedGym\", val)}\n          value={this.state.selectedGym}\n          options={this.state.gymOptions}\n          type=\"input\"\n        />\n        <Selector\n          label=\"Start Time\"\n          changed={val => this.handleChange(\"time\", val)}\n          value={this.state.time}\n          //   options={options}\n          type=\"time\"\n        />\n        {/* <Tooltip\n          // options\n          title=\"Welcome to React\"\n          position=\"right\"\n          trigger=\"click\"\n          delay={[0, 3000]}\n        >\n          <button>Click here to show popup</button>\n        </Tooltip> */}\n        <Button clicked={this.handleClick} type=\"copy\" />\n        {/* <label style={{ color: \"#6c7d8e\" }}>Start Time</label>\n        {/* <div className=\"form-group\"> */}\n        {/* <input\n          type=\"time\"\n          className=\"form-control\"\n          placeholder=\"Time\"\n          required=\"\"\n          data-fillr-id=\"1465670472\"\n          data-fillr=\"bound\"\n          autoComplete=\"off\"\n          onChange={val => this.handleChange(\"time\", val)}\n        />{\" \"} */}\n        */}\n        {/* </div> */}\n        {/* <Selector\n          label=\"Start Time\"\n          changed={this.handleChanged}\n          selected={this.state.selectedOption}\n          type=\"time\"\n        /> */}\n        {/* <CopyToClipboard text={copyString}> */}\n        {/* <Button clicked={this.handleClick} /> */}\n        {/* <Tooltip position=\"bottom\" trigger=\"click\" id=\"tooltip\"> */}\n        {/* <Button clicked={this.handleClick} /> */}\n        {/* <OverlayTrigger\n          trigger=\"click\"\n          placement=\"right\"\n          overlay={<Tooltip id=\"overlay-example\"> Copied</Tooltip>}\n        >\n          <button variant=\"secondary\" data-delay='{\"show\":\"500\", \"hide\":\"100\"}'>\n            Popover on clicked\n          </button>\n        </OverlayTrigger> */}\n        {/* <Button clicked={this.handleClick} /> */}\n        {/* <button data-tip=\"Copied\" event=\"click\">\n          Click\n        </button>\n        <ReactTooltip delayHide={0}>\n          <p>copied</p>\n        </ReactTooltip> */}\n        {/* <Button data-tip data-for=\"clickme\" data-event=\"click\">\n          copy\n        </Button>\n        <ReactTooltip\n          id=\"clickme\"\n          place=\"right\"\n          effect=\"solid\"\n          clickable={true}\n        >\n          <p>copied</p>\n        </ReactTooltip> */}\n        {/* <Button clicked={this.handleClick} isHidden={this.copied} /> */}\n        {/* <Button clicked={this.handleClick} /> */}\n        {/* </Tooltip> */}\n        {/* <Overlay show={show} placement=\"right\">\n          <Tooltip>Copied</Tooltip>\n        </Overlay>\n        <OverlayTrigger\n          key={placement}\n          placement={placement}\n          overlay={\n            <Tooltip id={`tooltip-${placement}`}>\n              Tooltip on <strong>{placement}</strong>.\n            </Tooltip>\n          }\n        >\n          <Button variant=\"secondary\">Tooltip on {placement}</Button>\n        </OverlayTrigger> */}\n        {/* </CopyToClipboard> */}\n      </div>\n    );\n  }\n}\n\nexport default RaidBuilder;\n","import React from \"react\";\nimport image from \"../../assets/images/ep-logo-green.svg\";\nimport classes from \"./Logo.module.css\";\nimport Image from \"react-bootstrap/Image\";\nimport { Link } from \"react-router-dom\";\nconst logo = props => {\n  //remove link to nav link incase\n  switch (props.type) {\n    case \"logo\":\n      return (\n        <Link to=\"/\">\n          <Image src={image} alt=\"logo\" className={classes.Logo} />\n        </Link>\n      );\n    case \"team\":\n      return <Image src={props.src} alt=\"logo\" className={classes.TeamLogo} />;\n  }\n};\n\nexport default logo;\n","import React from \"react\";\nimport { Navbar, Nav, NavItem } from \"react-bootstrap/\";\nimport \"./Navbar.css\";\nimport Logo from \"../Logo/Logo\";\nimport { NavLink, Link } from \"react-router-dom\";\nconst navbar = props => (\n  <Navbar collapseOnSelect expand=\"md\" className=\"navbar-dark navbar-custom\">\n    <Logo type=\"logo\" />\n\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\n      {/* <Nav>\n      <Logo />\n    </Nav> */}\n\n      {/* <Navbar.Brand href=\"/home\"> */}\n      {/* </Navbar.Brand> */}\n      {/* <Nav> */}\n      {/* <NavLink to=\"/\">Home</NavLink>\n      <NavLink to=\"/welcome\">Welcome</NavLink> */}\n      <Nav>\n        {/* <Nav.Link\n          exact\n          as={NavLink}\n          to=\"/\"\n          activeStyle={{\n            backgroundColor: \"white\"\n          }}\n        >\n          Home\n        </Nav.Link> */}\n        <NavItem>\n          <NavLink exact to=\"/\">\n            Home\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink to=\"/welcome\">Welcome</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink to=\"/ex\">Ex Gyms</NavLink>\n        </NavItem>\n        <NavItem>\n          <a href=\"https://www.paypal.me/theepicpancake\">Donate</a>\n          {/* <NavLink to=\"https://www.paypal.me/theepicpancake\">Donate</NavLink> */}\n        </NavItem>\n      </Nav>\n      {/* <Nav.Link\n          to=\"/welcome\"\n          activeStyle={{\n            backgroundColor: \"white\"\n          }}\n        >\n          Welcome\n        </Nav.Link>\n        <Nav.Link\n          as={NavLink}\n          to=\"/ex\"\n          activeStyle={{\n            backgroundColor: \"white\"\n          }}\n        >\n          Ex Gyms\n        </Nav.Link>\n        <Nav.Link\n          as={NavLink}\n          target=\"_blank\"\n          href=\"https://www.paypal.me/theepicpancake\"\n          activeStyle={{\n            backgroundColor: \"red !important\"\n          }}\n        >\n          Donate\n        </Nav.Link> */}\n\n      {/* <Nav.Link\n          as={NavLink}\n          to=\"https://www.paypal.me/theepicpancake\"\n          activeStyle={{\n            backgroundColor: \"white\"\n          }}\n          target=\"_blank\"\n        >\n          Donate\n        </Nav.Link> */}\n      {/* </Nav> */}\n    </Navbar.Collapse>\n  </Navbar>\n);\n\nexport default navbar;\n","import React from \"react\";\nimport classes from \"./Paragraph.module.css\";\nconst paragraph = props => (\n  <div className={classes.Paragraph}>\n    <h3>{props.title}</h3>\n    <p>\n      {props.details}\n      <a href={props.link}>{props.text}</a>\n    </p>\n  </div>\n);\n\nexport default paragraph;\n","import React, { Component } from \"react\";\nimport classes from \"./Welcome.module.css\";\nimport Paragraph from \"../../components/Paragraph/Paragraph\";\n\nclass Welcome extends Component {\n  state = {\n    admins: [\n      { name: \"@Pokedot / Lily 🔥40\", link: \"https://t.me/Pokedot\" },\n      {\n        name: \"@SunkenDemon / Raymond ⚡️40\",\n        link: \"https://t.me/SunkenDemon\"\n      },\n      { name: \"@Donjuan0236 / Juan 🔥40\", link: \"https://t.me/Donjuan0236\" },\n      {\n        name: \"@ChicagoPeace / Dave N ❄️40\",\n        link: \"https://t.me/ChicagoPeace\"\n      },\n      { name: \"@TorenaOne / Oné ⚡️36\", link: \"\" },\n      { name: \"@KillaKyla / Kyla 🔥40\", link: \"https://t.me/killakyla\" },\n      { name: \"@Luisarevalo21 / Luis A ❄️40\", link: \"\" },\n      { name: \"Katie 🔥38\", link: \"\" },\n      { name: \"@SteveHella / Steven ❄️40\", link: \"https://t.me/SteveHella\" },\n      { name: \"@Ghardhar / Gary 🔥40\", link: \"https://t.me/Ghardhar\" },\n      { name: \"@VivaLasViolence / Ian G 🔥40\", link: \"https://t.me/\" },\n      { name: \"@PookieMom / Marianne 🔥40\", link: \"https://t.me/PookieMom\" }\n    ]\n  };\n  render() {\n    const { admins } = this.state;\n    return (\n      <div className={classes.Welcome}>\n        <h1 className={classes.Header}>C/R/H/P Welcome</h1>\n        <Paragraph details=\"Hello and welcome to the C/R/H/P PoGo group! Our group, comprised of friendly and enthusiastic Pokemon Go players located in the greater Pinole area, meet up frequently to do raids, lure parties, community days, and now monthly PVP tournaments!\" />\n        <Paragraph details=\"We use the messaging app Telegram to communicate which can be downloaded here: Apple Google\" />\n        <Paragraph details=\"Once Telegram is installed simply follow the links below for the handful of chats that our group uses. We have 5 main chat channels set up to help information flow in an organized way.\" />\n        <Paragraph\n          details=\"Our main chat channel. Used mostly to call out raids, talk about the\n          game, and share information. \"\n          title=\"CHRP Chat\"\n          link=\"https://t.me/joinchat/GMGPjELSHkMxOBBM9u-fJA\"\n          text=\"https://t.me/joinchat/GMGPjELSHkMxOBBM9u-fJA\"\n        />\n        <Paragraph\n          details=\"Used only for posting (and RSVPing to) verified raids. No chatting. \"\n          title=\"Roll & Pin Tracker\"\n          link=\"https://t.me/joinchat/GMGPjERr5AohCNVe7VykMw\"\n          text=\"https://t.me/joinchat/GMGPjERr5AohCNVe7VykMw\"\n        />\n        <Paragraph\n          details=\"The following link will take you to our sister group R/ES/SP PoGo Raids where they raid in Richmond,  El Sobrante, and San Pablo \"\n          title=\"R/ES/SP PoGo Raids \"\n          link=\"https://t.me/joinchat/Go4FV0muowQPrU8LIrA9yQ\"\n          text=\"https://t.me/joinchat/Go4FV0muowQPrU8LIrA9yQ\"\n        />\n        <Paragraph\n          details=\"Used for posting and (and RSVPing to) verified raids. No chatting. In R/ES/SP PoGo Raids \"\n          title=\"R/ES/SP Roll & Pin Tracker\"\n          link=\"https://t.me/joinchat/Go4FV0muowQPrU8LIrA9yQ\"\n          text=\"https://t.me/joinchat/Go4FV0muowQPrU8LIrA9yQ\"\n        />\n        <Paragraph\n          details=\"Used for organizing and RSVPing to EX Raids. \"\n          title=\"EX Raid Chat\"\n          link=\"https://t.me/joinchat/GMGPjERrg9zzIvVaglh-9g\"\n          text=\"https://t.me/joinchat/GMGPjERrg9zzIvVaglh-9g\"\n        />\n        <Paragraph\n          details=\"Rare Spawns and Research Used to call out any rare Pokemon spawns or\n          research tasks that are found. \"\n          title=\"Rare Spawns and Research\"\n          link=\"https://t.me/joinchat/GMGPjEM1Xr4ZpCGAym5YTQ\"\n          text=\"https://t.me/joinchat/GMGPjEM1Xr4ZpCGAym5YTQ\"\n        />\n        <Paragraph\n          details=\"Friends and Trading Used to share friend codes and set up trades with\n          other players. \"\n          title=\"Friends and Trading\"\n          link=\"https://t.me/joinchat/F89x00ih15pnIR-8Q8i2yg\"\n          text=\"https://t.me/joinchat/F89x00ih15pnIR-8Q8i2yg\"\n        />\n        <Paragraph\n          details=\"Donations are always welcomed. \n          Donations will be used to host the website, and fund pizza on community days and PVP tournamnets. \n          Clicking the link will take you to our donations page. \"\n          title=\"Donations\"\n          link=\"https://t.me/joinchat/F89x00ih15pnIR-8Q8i2yg\"\n          text=\"Donate\"\n        />\n        <p>\n          If you have any questions, comments or concerns feel free to reach out\n          to any Community Leaders below:\n        </p>\n        <ul className={classes.List}>\n          {admins.map(element => {\n            return (\n              <li key={element.name}>\n                <a href={element.link}>{element.name}</a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Welcome;\n","import React from \"react\";\nimport classes from \"./Spinner.module.css\";\n\nconst spinner = props => <div className={classes.Loader}>Loading...</div>;\n\nexport default spinner;\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Spinner from \"../Spinner/Spinner\";\n\nconst modal = props => (\n  <Modal show={props.show} onHide={props.hide} centered>\n    <Spinner />\n  </Modal>\n);\n\nexport default modal;\n","import React, { Component } from \"react\";\nimport classes from \"./ExGyms.module.css\";\nimport { Link } from \"react-router-dom\";\nimport Tabletop from \"tabletop\";\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport Modal from \"../../components/Modal/Modal\";\nimport Button from \"../../components/Button/Button\";\n\nclass ExGyms extends Component {\n  state = {\n    gyms: [\n      {\n        name: \"Can You Hear There (Woodfield)\",\n        listName: \"Can You Hear There, Hercules (Lupine Road, Park)\"\n      },\n      {\n        name: \"Country Club Vist Park Dedication Plaque\",\n        listName: \"Country Club Vist Park Dedication Plaque, Richmond\"\n      },\n      {\n        name: \"Ever Burning Flame (Fernandez Park)\",\n        listName: \"Ever Burning Flame, Pinole (Fernandez Park)\"\n      },\n      {\n        name: \"Fountain of the Bells\",\n        listName: \"Fountain of the Bells, San Pablo\"\n      },\n      {\n        name: \"Hazel Downer Thorton Memorial Grove (Dog Park)\",\n        listName:\n          \"Hazel Downer Thorton Memorial Grove, Pinole (Pinole Valley dog park)\"\n      },\n      {\n        name: \"Lamoine (Cheese) Park\",\n        listName: \"Lamoine Park, Richmond (Cheese Park)\"\n      },\n      { name: \"Lefty Gomez\", listName: \"Lefty Gomez Plaque, Rodeo\" },\n      {\n        name: \"Pinole Point Business Park Fountain A\",\n        listName: \"Pt. Pinole Business Park Fountain, Richmond\"\n      },\n      {\n        name: \"Pinole Rotary Club (Louis Francis)\",\n        listName: \"Pinole Rotary Club, Pinole (Marlesta Rd)\"\n      },\n      { name: \"Pinole Valley Park\", listName: \"Pinole Valley Park, Pinole\" },\n      {\n        name: \"Playground (Refugio)\",\n        listName: \"Playground, Hercules (Refugio Park)\"\n      },\n      {\n        name: \"Starbucks (Richmond Parkway)\",\n        listName: \"Starbucks, Richmond Parkway location\"\n      },\n      {\n        name: \"Starbucks (San Pablo Dam Road)\",\n        listName: \"Starbucks, San Pablo Dam Rd. location (El Sob/San Pablo)\"\n      }\n    ],\n    active_gyms: [],\n    loading: true\n  };\n\n  componentDidMount() {\n    Tabletop.init({\n      key:\n        \"https://docs.google.com/spreadsheets/d/15mSqg-uGZTmQBEu_hqvNzaCiSPGi8JapuV46WmsDRvM/edit?usp=sharing\",\n      callback: this.showInfo,\n      simpleSheet: true\n    });\n  }\n  //take off incase\n  handleHide = () => {\n    console.log(\"hiding was triggered\");\n    this.setState({ loading: false });\n  };\n  showInfo = (data, tabletop) => {\n    const active = [];\n    this.state.gyms.map(element => {\n      if (tabletop.sheets(element.listName).toArray().length !== 0) {\n        active.push(element.listName);\n      }\n    });\n    this.setState({ active_gyms: active, loading: false });\n\n    // this.state.gyms.map(elemenet => {\n    //   active.push(elemenet);\n    // });\n\n    // this.setState({ active_gyms: active });\n  };\n  handleClick = () => {\n    window.location.href = \"https://goo.gl/forms/5fhu41K2qYhgkeTx2\";\n  };\n  render() {\n    // let spinner = null;\n    // if (this.state.loading) {\n    //   spinner = <Spinner />;\n    // }\n    const list = this.state.gyms.map(element => {\n      const names = this.state.active_gyms.includes(element.listName)\n        ? `${classes.newStyle}`\n        : \"\";\n      // console.log(names);\n      const gymName = element.listName;\n      return (\n        <li key={element.listName}>\n          <Link\n            to={`ex/${gymName}`}\n            className={names}\n            // className={` ${\n            //   this.state.active_gyms.includes(element.listName)\n            //     ? \"classes.newStyle\"\n            //     : \"\"\n            // }`}\n          >\n            {element.name}\n          </Link>\n        </li>\n      );\n\n      //     <li\n      //       className={\n      //         this.state.active_gyms.includes(element.listName)\n      //           ? classes.newStyle\n      //           : \"\"\n      //       }\n      //     >\n      //       {element.name}\n      //     </li>\n      //   </Link>\n    });\n\n    return (\n      <div className={classes.ExGyms}>\n        <h1>Ex Raid Gyms</h1>\n        {/* remove if need be */}\n        <Modal show={this.state.loading} hide={this.handleHide} />\n        <ul>{list}</ul>\n        <div className={classes.Button_Div}>\n          {/* <Link to=\"https://docs.google.com/forms/d/e/1FAIpQLSfYRLhE5BUMlLOGo9Jykq023zLSYnFXTFamf0uKg6x8teRl4w/viewform\"> */}\n          <Button clicked={this.handleClick} type=\"signup\">\n            Sign Up\n          </Button>\n          {/* </Link> */}\n        </div>\n        <a href=\"https://telegra.ph/PokeRaiderBot-09-16\">\n          To learn more about @PokeRaiderBot and what commands you can use,\n          click here.\n        </a>\n      </div>\n    );\n  }\n}\n\n// <ul id=\"location-list\" class=\"w3-container\">\n//     <li><a href=\"Can_You_Hear_Me.html\" id=\"Woodfield\">Can You Hear There (Woodfield)</a></li>\n//     <li><a href=\"Country.html\" id=\"Country\">Country Club Vist Park Dedication Plaque</a></li>\n//     <li><a href=\"Ever_Burning.html\" id=\"Fernandez\">Ever Burning Flame (Fernandez Park)</a></li>\n//     <li><a href=\"Fountain_Of_Bells.html\" id=\"Fountain\">Fountain of the Bells</a></li>\n//     <li><a href=\"Hazel_Downer.html\" id=\"Hazel\">Hazel Downer Thorton Memorial Grove (Dog Park)</a></li>\n//     <li><a href=\"Lamoine_Park.html\" id=\"Lamoine\">Lamoine (Cheese) Park</a></li>\n//     <li><a href=\"Left_Gomez.html\" id=\"Lefty\">Lefty Gomez</a></li></li>\n//     <li><a href=\"Pinole_Business_Foutain.html\" id=\"Pinole_Point\">Pinole Point Business Park Fountain A</a></li>\n//     <li><a href=\"Pinole_Rotary.html\" id=\"Rotary\">Pinole Rotary Club (Louis Francis)</a></li>\n//     <li><a href=\"Pinole_Valley_Park.html\" id=\"PVP\">Pinole Valley Park</a></li>\n//     <li><a href=\"Playground.html\" id=\"Playground\">Playground (Refugio)</a></li>\n//     <li><a href=\"Starbucks_Richmond_Parkway.html\" id=\"Starbucks_Richmond\">Starbucks (Richmond Parkway)</a></li>\n//     <li><a href=\"Starbucks_Dam_Road.html\" id=\"Starbucks_SanPablo\">Starbucks (San Pablo Dam Road)</a></li>\n// </ul>\nexport default ExGyms;\n","import React from \"react\";\nimport classes from \"./ListBuilder.module.css\";\nimport Logo from \"../Logo/Logo\";\nimport ValorImage from \"../../assets/images/Team_Valor.png\";\nconst listBuilder = props => {\n  //   console.log(\"the string is\", props.text);\n  //   const test = group => {\n  //     console.log(\"group is\", group);\n  //     props.test(group);\n  //   };\n\n  //   const childFunction = dataFromChild => {\n  //     props.test(dataFromChild);\n  //   };\n  //   console.log(\"the props are\", props);\n  let list = null;\n  let group = props.team + \"\\n\";\n\n  //   props.text += props.Team;\n\n  if (props.list.length !== 0) {\n    list = props.list.map(element => {\n      if (\n        element[6].trim() ===\n        \"My friend will play for me (enter their name in the comment)\"\n      ) {\n        group +=\n          element[0].trim() +\n          \", \" +\n          element[1].trim() +\n          \", \" +\n          element[3].trim() +\n          \", \" +\n          \"via proxy\" +\n          \"\\n\";\n        return (\n          <li key={element[0]}>\n            {element[0].trim() +\n              \", \" +\n              element[1].trim() +\n              \", \" +\n              element[3].trim() +\n              \", \" +\n              \"via proxy\"}\n          </li>\n        );\n      } else if (\n        element[6].trim() ===\n        \"I need someone to play for me (add your telegram name in the comments so an admin can contact you)\"\n      ) {\n        group +=\n          element[0].trim() +\n          \", \" +\n          element[1].trim() +\n          \", \" +\n          element[3].trim() +\n          \", \" +\n          \"needs proxy\" +\n          \"\\n\";\n        return (\n          <li key={element[0]}>\n            {element[0].trim() +\n              \", \" +\n              element[1].trim() +\n              \", \" +\n              element[3].trim() +\n              \", \" +\n              \"needs proxy\"}\n          </li>\n        );\n      } else {\n        group +=\n          element[0].trim() +\n          \", \" +\n          element[1].trim() +\n          \", \" +\n          element[3].trim() +\n          \" \\n\";\n        return (\n          <li key={element[0]}>\n            {element[0].trim() +\n              \", \" +\n              element[1].trim() +\n              \", \" +\n              element[3].trim()}\n          </li>\n        );\n      }\n    });\n    // childFunction(group);\n  } else {\n    // console.log(\"inside the else\");\n    group += \"No \" + props.team + \"\\n\";\n    // console.log(\"group is\", group);\n    // childFunction(group);\n    return (\n      <div\n        className={[classes.List, \"container\"].join(\" \")}\n        onChange={props.test(group)}\n      >\n        <ul>\n          <li key={Math.random()}>No {props.team}</li>\n        </ul>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={[classes.List, \"container\"].join(\" \")}\n      onChange={props.test(group)}\n    >\n      {/* <Logo src={ValorImage} type=\"team\" /> */}\n      <ul>{list} </ul>\n    </div>\n  );\n};\nexport default listBuilder;\n","import React, { Component } from \"react\";\nimport Tabletop from \"tabletop\";\nimport classes from \"./Gym.module.css\";\nimport ListBuilder from \"../../components/ListBuilder/ListBuilder\";\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport Modal from \"../../components/Modal/Modal\";\nimport ValorLogo from \"../../assets/images/Team_Valor.png\";\nimport Logo from \"../../components/Logo/Logo\";\nimport MysticLogo from \"../../assets/images/Team_Mystic.png\";\nimport InstinctLogo from \"../../assets/images/Team_Instinct.png\";\nimport Button from \"../../components/Button/Button\";\nimport copy from \"copy-to-clipboard\";\n\nlet myFinalString = \"\";\n\nclass Gym extends Component {\n  state = {\n    // id: this.props.match.params.gymId,\n    data: [],\n    date: \"\",\n    time: \"\",\n    instinctList: [],\n    valorList: [],\n    mysticList: [],\n    loading: true,\n    copyString: \" \",\n    copied: false\n  };\n\n  componentDidMount() {\n    // console.log(\"the id is\", this.props.match.params.gymId);\n    // console.log(\"componentdid mount\");\n    Tabletop.init({\n      key:\n        \"https://docs.google.com/spreadsheets/d/15mSqg-uGZTmQBEu_hqvNzaCiSPGi8JapuV46WmsDRvM/edit?usp=sharing\",\n      callback: this.showInfo,\n      simpleSheet: true\n    });\n  }\n\n  handleClick = () => {\n    // copyToClicpboard = e => {\n    this.refs.input.select();\n    // console.log(\"this .refs\", this.refs);\n    // this.setState({ copied: true });\n    document.execCommand(\"copy\");\n    return false;\n  };\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   const copy = { ...this.state };\n  //   console.log(\"previous props is\", prevState);\n  //   console.log(\"the current state is\", this.state);\n  //   // if (prevProps.copy !== this.props.data) {\n  //   //   this.chart = c3.load({\n  //   //     data: this.props.data\n  //   //   });\n  //   console.log(\"final string in componenet did update\", myFinalString);\n\n  //   if (copy.copyString.contains(prevState.copyString)) {\n  //     copy.copyString += myFinalString;\n  //     this.setState({ copyString: copy.copyString });\n  //   }\n  //   // const copyState = { ...this.state };\n  //   // console.log(\"this.copystring\", this.copyString());\n  //   // console.log(\n  //   //   \"the copy string in compondent did update is\",\n  //   //   copyState.copyString\n  //   // );\n  //   // // console.log(\"the current copy string is\", this.state.copyString);\n  //   // // console.log(\"prev props are\", prevState);\n  //   // if (prevState.copyString !== this.state.copyString) {\n  //   //   console.log(\"isnide the if\");\n  //   //   // console.log(\"this.state.copystring\", this.state.copyString);\n  //   //   // this.setState({ copyString: copyString });\n  //   // }\n  // }\n  copyString = dataFromChild => {\n    // console.log(\"the data from child is\", dataFromChild);\n    let copy = this.state.copyString;\n    if (!copy.includes(dataFromChild)) {\n      copy += dataFromChild + \"\\n\";\n      // console.log(\"my final string\", myFinalString);\n      this.setState({ copyString: copy });\n    }\n    // myFinalString += dataFromChild;\n    // console.log(\"my final string\", myFinalString);\n\n    // console.log(\"the data from child is\", dataFromChild);\n    // console.log(\"copystate.copystring\", copyState.copyString);\n    // // let copyString = \"\";\n    // // if (prevState !== copyState) {\n    // console.log(\"inside the if\");\n    // console.log(\"the data from the child is\", dataFromChild);\n\n    // copyState.copyString += dataFromChild;\n    // console.log(\"copystate\", copyState.copyString);\n    // copyString += dataFromChild + \" \\n\";\n    // myFinalString = copyString;\n    // this.setState({ copyString: copyState.copyString });\n\n    // console.log(\"the copy string before return is\", copyString);\n    // let copy = \"\";\n    // myFinalString += copyString;\n    // return copyString;\n    // copy += dataFromChild + \" \\n\";\n    // console.log(\"the final copy is\", copy);\n    // console.log(\"MY FINAL STRING IS\", copyString);\n    // this.setState({ copyString: myFinalString });\n    // myString = myFinalString;\n    // console.log(\"MY STRING\", myString);\n    // this.setState({ copyString: copy });\n    //}\n    // console.log(\"the data from the child is\", copy);\n    // return copy;\n    // this.setState({ copyString: copy });\n\n    //setstate afterwards\n  };\n  showInfo = (data, tabletop) => {\n    const array = tabletop.sheets(this.props.match.params.gymId).toArray();\n    // console.log(\"the array is\", array);\n    let copyString = \"\";\n    if (array.length !== 0) {\n      copyString += this.props.match.params.gymId + \"\\n\";\n      // copyString += this.props.match.params.gymId + \"\\n\";\n      // console.log(\"the id is\", this.props.match.params.gymId);\n      // const array = tabletop.sheets(this.props.match.params.gymId).toArray();\n      const date = array[0][4];\n      copyString += date + \"\\n\";\n      const time = array[0][5];\n      copyString += time + \"\\n\";\n      // console.log(\"the copy string is\", copyString);\n      const instinctList = array.filter(element => element[2] === \"Instinct\");\n      const mysticList = array.filter(element => element[2] === \"Mystic\");\n      const valorList = array.filter(element => element[2] === \"Valor\");\n      // console.log(\"MY FINAL STRING\", copyString);\n\n      // console.log(\"the valor list is\", valorList);\n      // console.log(array[0][0]);\n      this.setState({\n        data: array,\n        date,\n        time,\n        instinctList,\n        valorList,\n        mysticList,\n        loading: false,\n        //change final string\n        copyString: myFinalString\n      });\n    } else {\n      this.setState({ loading: false, copyString: copyString });\n    }\n  };\n\n  render() {\n    // console.log(\"my final string ins render \", this.state.copyString);\n\n    // if (this.state.copied) {\n    //   copy(this.state.copyString, {\n    //     debug: true,\n    //     message: null\n    //   });\n    // }\n    // console.log(\"the copystring is\", myFinalString);\n    // this.copyString();\n    let gyms = (\n      <>\n        {/* <h1 className={classes.Gym}>{this.props.match.params.gymId}</h1> */}\n        <div className={classes.List}>\n          <span className={classes.Gym_date_time}>{this.state.date}</span>\n          <span className={classes.Gym_date_time}>{this.state.time}</span>\n          <div className={[classes.List, classes.InstinctList].join(\" \")}>\n            <Logo src={InstinctLogo} type=\"team\" />\n            <ListBuilder\n              list={this.state.instinctList}\n              team=\"Instinct\"\n              // text={this.state.copyString}\n              test={this.copyString}\n            />\n          </div>\n          <div className={[classes.List, classes.MysticList].join(\" \")}>\n            <Logo src={MysticLogo} type=\"team\" />\n            <ListBuilder\n              list={this.state.mysticList}\n              team=\"Mystic\"\n              // text={this.state.copyString}\n              test={this.copyString}\n            />\n          </div>\n          <div className={[classes.List, classes.ValorList].join(\" \")}>\n            <Logo src={ValorLogo} type=\"team\" />\n            <ListBuilder\n              list={this.state.valorList}\n              team=\"Valor\"\n              // text={this.state.copyString}\n              test={this.copyString}\n            />\n          </div>\n        </div>\n      </>\n    );\n    if (this.state.loading) {\n      //change to just a spinner if need be\n      gyms = <Modal show={this.state.loading} />;\n    }\n    // console.log(\"the id is\", this.state.data[0]);\n    // let date = this.state.data[0];\n    // this.state.data.map(element => {\n    //   date = element[4];\n    //   time = element[5];\n    // });\n    return (\n      <div className=\"container\">\n        <h1 className={classes.Gym}>{this.props.match.params.gymId}</h1>\n        <textarea\n          className={classes.Raidlist}\n          ref=\"input\"\n          type=\"text\"\n          value={this.state.copyString}\n        />\n        {gyms}\n\n        <Button clicked={this.handleClick} type=\"copy\">\n          Copy\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default Gym;\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport RaidBuilder from \"./containers/RaidBuilder/RaidBuilder\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Welcome from \"./containers/Welcome/Welcome\";\nimport ExGyms from \"./containers/Ex_Gyms/ExGyms\";\nimport Gym from \"./containers/Gym/Gym\";\n\nclass App extends Component {\n  // state = {\n  //test\n  //   pokemonOptions: [],\n  //   gymOptions: [],\n  //   time: \"\",\n  //   selectedRaidBoss: null,\n  //   selectedGym: null,\n\n  //   copyValue: []\n  // };\n\n  // handleChange = (key, selectedOption) => {\n  //   console.log(\"inside the handle change\", selectedOption);\n  //   if (key === \"time\") {\n  //     this.setState({ [key]: selectedOption.target.value });\n  //   } else {\n  //     this.setState({ [key]: selectedOption.value });\n  //   }\n  // };\n\n  // handleRaidBossChange = selectedRaidBoss => {\n  //   // console.log(\"the event is \", event.value);\n  //   this.setState({\n  //     selectedRaidBoss: selectedRaidBoss.value,\n  //     copyValue: selectedRaidBoss\n  //   });\n  // };\n  // handleGymChange = selectedGym => {\n  //   // console.log(\"the event is \", event.value);\n  //   this.setState({\n  //     selectedGym: selectedGym,\n  //     copyValue: selectedGym\n  //   });\n  // };\n  // {/* //toolbar\n  // //search bar\n  // //search bar\n  // // <Selector />\n  // //search bar */}\n  render() {\n    return (\n      //either keep the container or use media queries to reduce the size depended on screensize\n      <div>\n        {/* <Navbar>\n          <img src={image} />\n        </Navbar> */}\n\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={RaidBuilder} />\n          <Route path=\"/welcome\" component={Welcome} />\n          <Route path=\"/ex/:gymId\" component={Gym} />\n          <Route path=\"/ex\" component={ExGyms} />\n          {/* <Route\n            exact\n            // path=\"/https://www.paypal.me/theepicpancake\"\n            // component={() => {\n            //   BrowserRouter.replace(\"/https://www.paypal.me/theepicpancake\");\n            //   window.location.href = \"https://www.paypal.me/theepicpancake\";\n            //   return null;\n            // }}    window.location.replace('http://www.google.com')\n          /> */}\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-tippy/dist/tippy.css\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Selector_Select__3lOI7\",\"Selector\":\"Selector_Selector__J2pJn\",\"Input\":\"Selector_Input__1_eKa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Welcome_Header__1nfVo\",\"Welcome\":\"Welcome_Welcome__1qcGL\",\"List\":\"Welcome_List__3WyEB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ExGyms\":\"ExGyms_ExGyms__1eKn1\",\"Button_Div\":\"ExGyms_Button_Div__3cPOr\",\"Links\":\"ExGyms_Links__xRPWN\",\"newStyle\":\"ExGyms_newStyle__1D__n\"};"],"sourceRoot":""}